{
  "swagger": "2.0",
  "info": {
    "description": "This is the WordPress REST API on www.vx68k.org.\n\nFor API details, see <https://developer.wordpress.org/rest-api/reference/>.",
    "version": "v2",
    "title": "WordPress REST API"
  },
  "host": "localhost:80",
  "basePath": "/index.php/wp-json/wp/v2",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json",
    "application/x-www-form-urlencoded"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/posts": {
      "get": {
        "summary": "List Posts",
        "operationId": "getPosts",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.\n\nDefault: `1`",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.\n\nDefault: `10`",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Limit response to resources published after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "author",
            "in": "query",
            "description": "Limit result set to posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author_exclude",
            "in": "query",
            "description": "Ensure result set excludes posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "before",
            "in": "query",
            "description": "Limit response to resources published before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Ensure result set includes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.\n\nDefault: `desc`\n\nOne of: `asc`, `desc`",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by object attribute.\n\nDefault: `date`\n\nOne of: `author`, `date`, `id`, `include`, `modified`, `parent`, `relevance`, `slug`, `title`",
            "required": false,
            "type": "string",
            "default": "date",
            "enum": [
              "author",
              "date",
              "id",
              "include",
              "modified",
              "parent",
              "relevance",
              "slug",
              "title"
            ]
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.\n\nDefault: `publish`",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Limit result set to all items that have the specified term assigned in the categories taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "categories_exclude",
            "in": "query",
            "description": "Limit result set to all items except those that have the specified term assigned in the categories taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Limit result set to all items that have the specified term assigned in the tags taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "tags_exclude",
            "in": "query",
            "description": "Limit result set to all items except those that have the specified term assigned in the tags taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sticky",
            "in": "query",
            "description": "Limit result set to items that are sticky.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Listed.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/post"
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/posts/#list-posts"
        }
      },
      "post": {
        "summary": "Create a Post",
        "operationId": "createPost",
        "parameters": [
          {
            "in": "body",
            "name": "post",
            "description": "Post.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created.",
            "schema": {
              "$ref": "#/definitions/post"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/posts/#create-a-post"
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "summary": "Retrieve a Post",
        "operationId": "getPost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved.",
            "schema": {
              "$ref": "#/definitions/post"
            }
          }
        },
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/posts/#retrieve-a-post"
        }
      },
      "put": {
        "summary": "Update a Post",
        "operationId": "updatePost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "post",
            "description": "Post.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated.",
            "schema": {
              "$ref": "#/definitions/post"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/posts/#retrieve-a-post"
        }
      },
      "delete": {
        "summary": "Delete a Post",
        "operationId": "deletePost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted."
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/posts/#delete-a-post"
        }
      }
    },
    "/posts/{parent}/revisions": {
      "get": {
        "summary": "List Post-revisions",
        "operationId": "getPostRevisions",
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID of the parent of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Listed.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/revision"
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/post-revisions/"
        }
      }
    },
    "/posts/{parent}/revisions/{id}": {
      "get": {
        "summary": "Retrieve a Post-revision",
        "operationId": "getPostRevision",
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID of the parent of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved.",
            "schema": {
              "$ref": "#/definitions/revision"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/post-revisions/#retrieve-a-post-revision"
        }
      },
      "delete": {
        "summary": "Delete a Post-revision",
        "operationId": "deletePostRevision",
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID of the parent of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted."
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/post-revisions/#delete-a-post-revision"
        }
      }
    },
    "/categories": {
      "get": {
        "summary": "List Categories",
        "operationId": "getCategories",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.\n\nDefault: `1`",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.\n\nDefault: `10`",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Ensure result set includes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.\n\nDefault: `desc`\n\nOne of: `asc`, `desc`",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by term attribute.\n\nDefault: `name`\n\nOne of: `id`, `include`, `name`, `slug`, `term_group`, `description`, `count`",
            "required": false,
            "type": "string",
            "default": "name",
            "enum": [
              "id",
              "include",
              "name",
              "slug",
              "term_group",
              "description",
              "count"
            ]
          },
          {
            "name": "hide_empty",
            "in": "query",
            "description": "Whether to hide resources not assigned to any posts.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "post",
            "in": "query",
            "description": "The id for the associated post of the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Listed.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/category"
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/categories/#list-categories"
        }
      },
      "post": {
        "summary": "Create a Category",
        "operationId": "createCategory",
        "parameters": [
          {
            "in": "body",
            "name": "category",
            "description": "Category.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created.",
            "schema": {
              "$ref": "#/definitions/category"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/categories/#create-a-category"
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "summary": "Retrieve a Category",
        "operationId": "getCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Category retrieved.",
            "schema": {
              "$ref": "#/definitions/category"
            }
          }
        },
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/categories/#retrieve-a-category"
        }
      },
      "put": {
        "summary": "Update a Category",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "category",
            "description": "Category.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category updated.",
            "schema": {
              "$ref": "#/definitions/category"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/categories/#update-a-category"
        }
      },
      "delete": {
        "summary": "Delete a Category",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted."
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/categories/#delete-a-category"
        }
      }
    },
    "/pages": {
      "get": {
        "summary": "List Pages",
        "operationId": "getPages",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.\n\nDefault: `1`",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.\n\nDefault: `10`",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Limit response to resources published after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "author",
            "in": "query",
            "description": "Limit result set to posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author_exclude",
            "in": "query",
            "description": "Ensure result set excludes posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "before",
            "in": "query",
            "description": "Limit response to resources published before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Ensure result set includes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "menu_order",
            "in": "query",
            "description": "The order of the object in relation to other object of its type.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.\n\nDefault: `desc`\n\nOne of: `asc`, `desc`",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by object attribute.\n\nDefault: `date`\n\nOne of: `author`, `date`, `id`, `include`, `modified`, `parent`, `relevance`, `slug`, `title`",
            "required": false,
            "type": "string",
            "default": "date",
            "enum": [
              "author",
              "date",
              "id",
              "include",
              "modified",
              "parent",
              "relevance",
              "slug",
              "title"
            ]
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent_exclude",
            "in": "query",
            "description": "Ensure result set excludes specific ids.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.\n\nDefault: `publish`",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Listed.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/page"
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/pages/#list-pages"
        }
      },
      "post": {
        "summary": "Create a Page",
        "parameters": [
          {
            "in": "body",
            "name": "page",
            "description": "Page.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created.",
            "schema": {
              "$ref": "#/definitions/page"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/pages/#create-a-page"
        }
      }
    },
    "/pages/{id}": {
      "get": {
        "summary": "Retrieve a Page",
        "operationId": "getPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved.",
            "schema": {
              "$ref": "#/definitions/page"
            }
          }
        },
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/pages/#retrieve-a-page"
        }
      },
      "put": {
        "summary": "Update a Page",
        "operationId": "updatePage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "page",
            "description": "Page.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated.",
            "schema": {
              "$ref": "#/definitions/page"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/pages/#update-a-page"
        }
      },
      "delete": {
        "summary": "Delete a Page",
        "operationId": "deletePage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted."
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "externalDocs": {
          "url": "https://developer.wordpress.org/rest-api/reference/pages/#delete-a-page"
        }
      }
    },
    "/media": {
      "get": {
        "summary": "List Media",
        "description": "Scope under which the request is made; determines fields present in response.",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.\n\nDefault: `1`",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.\n\nDefault: `10`",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Limit response to resources published after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "author",
            "in": "query",
            "description": "Limit result set to posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author_exclude",
            "in": "query",
            "description": "Ensure result set excludes posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "before",
            "in": "query",
            "description": "Limit response to resources published before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Ensure result set includes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.\n\nDefault: `desc`\n\nOne of: `asc`, `desc`",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by object attribute.\n\nDefault: `date`\n\nOne of: `author`, `date`, `id`, `include`, `modified`, `parent`, `relevance`, `slug`, `title`",
            "required": false,
            "type": "string",
            "default": "date",
            "enum": [
              "author",
              "date",
              "id",
              "include",
              "modified",
              "parent",
              "relevance",
              "slug",
              "title"
            ]
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent_exclude",
            "in": "query",
            "description": "Ensure result set excludes specific ids.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.\n\nDefault: `publish`",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "media_type",
            "in": "query",
            "description": "Type of resource.",
            "required": false,
            "type": "string",
            "enum": [
              "file",
              "image"
            ]
          },
          {
            "name": "mime_type",
            "in": "query",
            "description": "Alternative text to display when resource is not displayed.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Media Listed.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/media"
              }
            }
          }
        },
        "externalDocs": {
          "description": "More information here",
          "url": "http://v2.wp-api.org/reference/media/"
        }
      },
      "post": {
        "summary": "Create Media",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "The date the object was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the object was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The A password to protect access to the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.\n\nDefault: `publish`",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the object.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "description": "Limit result set to posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "comment_status",
            "in": "query",
            "description": "Whether or not comments are open on the object",
            "required": false,
            "type": "string",
            "enum": [
              "open",
              "closed"
            ]
          },
          {
            "name": "ping_status",
            "in": "query",
            "description": "Whether or not the object can be pinged.",
            "required": false,
            "type": "string",
            "enum": [
              "open",
              "closed"
            ]
          },
          {
            "name": "alt_text",
            "in": "query",
            "description": "Alternative text to display when resource is not displayed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "caption",
            "in": "query",
            "description": "The caption for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description for the resource",
            "required": false,
            "type": "string"
          },
          {
            "name": "post",
            "in": "query",
            "description": "The id for the associated post of the resource.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Media created.",
            "schema": {
              "$ref": "#/definitions/media"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/media/{id}": {
      "get": {
        "summary": "Get Single Media",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Page retrieved.",
            "schema": {
              "$ref": "#/definitions/media"
            }
          }
        }
      },
      "post": {
        "summary": "Update Single Media",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the object was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the object was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The A password to protect access to the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.\n\nDefault: `publish`",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the object.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "description": "Limit result set to posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "comment_status",
            "in": "query",
            "description": "Whether or not comments are open on the object",
            "required": false,
            "type": "string",
            "enum": [
              "open",
              "closed"
            ]
          },
          {
            "name": "ping_status",
            "in": "query",
            "description": "Whether or not the object can be pinged.",
            "required": false,
            "type": "string",
            "enum": [
              "open",
              "closed"
            ]
          },
          {
            "name": "alt_text",
            "in": "query",
            "description": "Alternative text to display when resource is not displayed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "caption",
            "in": "query",
            "description": "The caption for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description for the resource",
            "required": false,
            "type": "string"
          },
          {
            "name": "post",
            "in": "query",
            "description": "The id for the associated post of the resource.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Page updated.",
            "schema": {
              "$ref": "#/definitions/media"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Single Media",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Media deleted."
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/types": {
      "get": {
        "summary": "List Type",
        "description": "Scope under which the request is made; determines fields present in response.",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Types Listed.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/type"
              }
            }
          }
        },
        "externalDocs": {
          "description": "More information here",
          "url": "http://v2.wp-api.org/reference/types/"
        }
      }
    },
    "/types/{id}": {
      "get": {
        "summary": "Get Single Type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Type retrieved.",
            "schema": {
              "$ref": "#/definitions/type"
            }
          }
        }
      }
    },
    "/statuses": {
      "get": {
        "summary": "List Status",
        "description": "Scope under which the request is made; determines fields present in response.",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Statuses Listed.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/status"
              }
            }
          }
        },
        "externalDocs": {
          "description": "More information here",
          "url": "http://v2.wp-api.org/reference/statuses/"
        }
      }
    },
    "/statuses/{id}": {
      "get": {
        "summary": "Get Single Status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Status retrieved.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          }
        }
      }
    },
    "/comments": {
      "get": {
        "summary": "List Comments",
        "description": "Scope under which the request is made; determines fields present in response.",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.\n\nDefault: `1`",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.\n\nDefault: `10`",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Limit response to resources published after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "author",
            "in": "query",
            "description": "Limit result set to posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author_exclude",
            "in": "query",
            "description": "Ensure result set excludes posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author_email",
            "in": "query",
            "description": "Limit result set to that from a specific author email. Requires authorization.",
            "required": false,
            "type": "string"
          },
          {
            "name": "before",
            "in": "query",
            "description": "Limit response to resources published before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Ensure result set includes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "karma",
            "in": "query",
            "description": "Limit result set to that of a particular comment karma. Requires authorization",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.\n\nDefault: `desc`\n\nOne of: `asc`, `desc`",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by object attribute.\n\nDefault: `date`\n\nOne of: `author`, `date`, `id`, `include`, `modified`, `parent`, `relevance`, `slug`, `title`",
            "required": false,
            "type": "string",
            "default": "date",
            "enum": [
              "author",
              "date",
              "id",
              "include",
              "modified",
              "parent",
              "relevance",
              "slug",
              "title"
            ]
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent_exclude",
            "in": "query",
            "description": "Ensure result set excludes specific ids.",
            "required": false,
            "type": "string"
          },
          {
            "name": "post",
            "in": "query",
            "description": "The id for the associated post of the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.\n\nDefault: `publish`",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Limit result set to comments assigned a specific type. Requires authorization. Default comment",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Comments Listed.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/comment"
              }
            }
          }
        },
        "externalDocs": {
          "description": "More information here",
          "url": "http://v2.wp-api.org/reference/comments/"
        }
      },
      "post": {
        "summary": "Create Comment",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "The date the object was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the object was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The A password to protect access to the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.\n\nDefault: `publish`",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the object.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "description": "Limit result set to posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "comment_status",
            "in": "query",
            "description": "Whether or not comments are open on the object",
            "required": false,
            "type": "string",
            "enum": [
              "open",
              "closed"
            ]
          },
          {
            "name": "ping_status",
            "in": "query",
            "description": "Whether or not the object can be pinged.",
            "required": false,
            "type": "string",
            "enum": [
              "open",
              "closed"
            ]
          },
          {
            "name": "alt_text",
            "in": "query",
            "description": "Alternative text to display when resource is not displayed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "caption",
            "in": "query",
            "description": "The caption for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description for the resource",
            "required": false,
            "type": "string"
          },
          {
            "name": "post",
            "in": "query",
            "description": "The id for the associated post of the resource.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment created.",
            "schema": {
              "$ref": "#/definitions/comment"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/comments/{id}": {
      "get": {
        "summary": "Get Single Comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Comment retrieved.",
            "schema": {
              "$ref": "#/definitions/comment"
            }
          }
        }
      },
      "post": {
        "summary": "Update Single Comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the object was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the object was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The A password to protect access to the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.\n\nDefault: `publish`",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the object.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "description": "Limit result set to posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "comment_status",
            "in": "query",
            "description": "Whether or not comments are open on the object",
            "required": false,
            "type": "string",
            "enum": [
              "open",
              "closed"
            ]
          },
          {
            "name": "ping_status",
            "in": "query",
            "description": "Whether or not the object can be pinged.",
            "required": false,
            "type": "string",
            "enum": [
              "open",
              "closed"
            ]
          },
          {
            "name": "alt_text",
            "in": "query",
            "description": "Alternative text to display when resource is not displayed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "caption",
            "in": "query",
            "description": "The caption for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description for the resource",
            "required": false,
            "type": "string"
          },
          {
            "name": "post",
            "in": "query",
            "description": "The id for the associated post of the resource.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Page updated.",
            "schema": {
              "$ref": "#/definitions/comment"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Single Comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment deleted."
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/taxonomies": {
      "get": {
        "summary": "List Taxonomy",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          },
          {
            "name": "type",
            "in": "query",
            "description": "Limit results to taxonomies associated with a specific post type.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Types Listed.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/taxonomy"
              }
            }
          }
        },
        "externalDocs": {
          "description": "More information here",
          "url": "http://v2.wp-api.org/reference/taxonomies/"
        }
      }
    },
    "/taxonomies/{id}": {
      "get": {
        "summary": "Get Single Taxonomy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Taxonomy retrieved.",
            "schema": {
              "$ref": "#/definitions/taxonomy"
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "summary": "List Tags",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.\n\nDefault: `1`",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.\n\nDefault: `10`",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Ensure result set includes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.\n\nDefault: `desc`\n\nOne of: `asc`, `desc`",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by object attribute.\n\nDefault: `date`\n\nOne of: `author`, `date`, `id`, `include`, `modified`, `parent`, `relevance`, `slug`, `title`",
            "required": false,
            "type": "string",
            "default": "date",
            "enum": [
              "author",
              "date",
              "id",
              "include",
              "modified",
              "parent",
              "relevance",
              "slug",
              "title"
            ]
          },
          {
            "name": "post",
            "in": "query",
            "description": "The id for the associated post of the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Tags Listed.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tag"
              }
            }
          }
        },
        "externalDocs": {
          "description": "More information here",
          "url": "http://v2.wp-api.org/reference/tags/"
        }
      },
      "post": {
        "summary": "Create Tag",
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "description": "The description for the resource",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "HTML title for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag created.",
            "schema": {
              "$ref": "#/definitions/tag"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/tags/{id}": {
      "get": {
        "summary": "Get Single Tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Tag retrieved.",
            "schema": {
              "$ref": "#/definitions/tag"
            }
          }
        }
      },
      "post": {
        "summary": "Update Single Tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description for the resource",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "HTML title for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag updated.",
            "schema": {
              "$ref": "#/definitions/tag"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Single Tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag deleted."
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "summary": "List Tags",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.\n\nDefault: `1`",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.\n\nDefault: `10`",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Ensure result set includes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.\n\nDefault: `desc`\n\nOne of: `asc`, `desc`",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by object attribute.\n\nDefault: `date`\n\nOne of: `author`, `date`, `id`, `include`, `modified`, `parent`, `relevance`, `slug`, `title`",
            "required": false,
            "type": "string",
            "default": "date",
            "enum": [
              "author",
              "date",
              "id",
              "include",
              "modified",
              "parent",
              "relevance",
              "slug",
              "title"
            ]
          },
          {
            "name": "roles",
            "in": "query",
            "description": "Roles assigned to the resource.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Users Listed.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          }
        },
        "externalDocs": {
          "description": "More information here",
          "url": "http://v2.wp-api.org/reference/users/"
        }
      },
      "post": {
        "summary": "Create User",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "HTML title for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "query",
            "description": "The first name for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "query",
            "description": "The last name for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of the resource.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "url",
            "in": "query",
            "description": "URL of the resource.",
            "required": false,
            "type": "string",
            "format": "url"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description for the resource",
            "required": false,
            "type": "string"
          },
          {
            "name": "nickname",
            "in": "query",
            "description": "The nickname for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "roles",
            "in": "query",
            "description": "Roles assigned to the resource.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The A password to protect access to the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "capabilities",
            "in": "query",
            "description": "All capabilities used by the resource.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "User created.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get Single User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
            "required": false,
            "type": "string",
            "default": "view",
            "enum": [
              "view",
              "embed",
              "edit"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      },
      "post": {
        "summary": "Update Single User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "username",
            "in": "query",
            "description": "The user name for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "HTML title for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "query",
            "description": "The first name for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "query",
            "description": "The last name for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of the resource.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "url",
            "in": "query",
            "description": "URL of the resource.",
            "required": false,
            "type": "string",
            "format": "url"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description for the resource",
            "required": false,
            "type": "string"
          },
          {
            "name": "nickname",
            "in": "query",
            "description": "The nickname for the resource.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "roles",
            "in": "query",
            "description": "Roles assigned to the resource.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The A password to protect access to the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "capabilities",
            "in": "query",
            "description": "All capabilities used by the resource.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "User updated.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Single User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the object.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass trash and force deletion.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "reassign",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted."
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "auth": {
      "type": "basic"
    }
  },
  "definitions": {
    "commonPostPage": {
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date the object was published, in the site's timezone.\n\nContext: `view`, `edit`, `embed`"
        },
        "date_gmt": {
          "type": "string",
          "format": "date-time",
          "description": "The date the object was published, as GMT.\n\nContext: `view`, `edit`"
        },
        "guid": {
          "type": "object",
          "description": "The globally unique identifier for the object.\n\nRead only\n\nContext: `view`, `edit`",
          "readOnly": true,
          "properties": {}
        },
        "id": {
          "type": "integer",
          "description": "Unique identifier for the object.\n\nRead only\n\nContext: `view`, `edit`, `embed`",
          "readOnly": true
        },
        "link": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object.\n\nRead only\n\nContext: `view`, `edit`, `embed`",
          "readOnly": true
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date the object was last modified, in the site's timezone.\n\nRead only\n\nContext: `view`, `edit`",
          "readOnly": true
        },
        "modified_gmt": {
          "type": "string",
          "format": "date-time",
          "description": "The date the object was last modified, as GMT.\n\nRead only\n\nContext: view, edit",
          "readOnly": true
        },
        "slug": {
          "type": "string",
          "description": "An alphanumeric identifier for the object unique to its type.\n\nContext: view, edit, embed"
        },
        "status": {
          "type": "string",
          "description": "A named status for the object.\n\nContext: `view`, `edit`\n\nOne of: `publish`, `future`, `draft`, `pending`, `private` ",
          "enum": [
            "publish",
            "future",
            "draft",
            "pending",
            "private"
          ]
        },
        "type": {
          "type": "string",
          "description": "Type of Post for the object.\n\nRead only\n\nContext: `view`, `edit`, `embed`",
          "readOnly": true
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "A password to protect access to the content and excerpt.\n\nContext: edit"
        },
        "title": {
          "type": "object",
          "description": "The title for the object.\n\nContext: `view`, `edit`, `embed`",
          "properties": {}
        },
        "content": {
          "type": "object",
          "description": "The content for the object.\n\nContext: `view`, `edit`",
          "properties": {}
        },
        "author": {
          "type": "integer",
          "description": "The ID for the author of the object.\n\nContext: `view`, `edit`, `embed`"
        },
        "excerpt": {
          "type": "object",
          "description": "The excerpt for the object.\n\nContext: `view`, `edit`, `embed`",
          "properties": {}
        },
        "featured_media": {
          "type": "integer",
          "description": "The ID of the featured media for the object.\n\nContext: `view`, `edit`, `embed`"
        },
        "comment_status": {
          "type": "string",
          "description": "Whether or not comments are open on the object.\n\nContext: `view`, `edit`\n\nOne of: `open`, `closed`",
          "enum": [
            "open",
            "closed"
          ]
        },
        "ping_status": {
          "type": "string",
          "description": "Whether or not the object can be pinged.\n\nContext: `view`, `edit`\n\nOne of: `open`, `closed`",
          "enum": [
            "open",
            "closed"
          ]
        }
      }
    },
    "post": {
      "allOf": [
        {
          "$ref": "#/definitions/commonPostPage"
        },
        {
          "type": "object",
          "properties": {
            "format": {
              "type": "string",
              "description": "The format for the object.\n\nContext: `view`, `edit`\n\nOne of: `standard`, `aside`, `chat`, `gallery`, `link`, `image`, `quote`, `status`, `video`, `audio` ",
              "enum": [
                "standard",
                "aside",
                "chat",
                "gallery",
                "link",
                "image",
                "quote",
                "status",
                "video",
                "audio"
              ]
            },
            "meta": {
              "type": "string",
              "description": "Meta fields.\n\nContext: `view`, `edit`"
            },
            "sticky": {
              "type": "boolean",
              "description": "Whether or not the object should be treated as sticky.\n\nContext: `view`, `edit`"
            },
            "template": {
              "type": "string",
              "description": "The theme file to use to display the object.\n\nContext: `view`, `edit`"
            },
            "categories": {
              "type": "array",
              "description": "The terms assigned to the object in the category taxonomy.\n\nContext: `view`, `edit`",
              "items": {
                "type": "integer"
              }
            },
            "tags": {
              "type": "array",
              "description": "The terms assigned to the object in the post_tag taxonomy.\n\nContext: `view`, `edit`",
              "items": {
                "type": "integer"
              }
            }
          }
        }
      ]
    },
    "user": {
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the object."
        },
        "username": {
          "type": "string",
          "description": "Login name for the resource."
        },
        "name": {
          "type": "string",
          "description": "Display name for the resource."
        },
        "first_name": {
          "type": "string",
          "description": "First name for the resource."
        },
        "last_name": {
          "type": "string",
          "description": "Last name for the resource."
        },
        "email": {
          "type": "string",
          "description": "The email address for the resource."
        },
        "url": {
          "type": "string",
          "description": "URL of the resource."
        },
        "description": {
          "type": "string",
          "description": "Description of the resource."
        },
        "link": {
          "type": "string",
          "description": "Author URL to the resource."
        },
        "nickname": {
          "type": "string",
          "description": "The nickname for the resource."
        },
        "slug": {
          "type": "string",
          "description": "An alphanumeric identifier for the resource."
        },
        "registered_date": {
          "type": "string",
          "description": "Registration date for the resource."
        },
        "roles": {
          "type": "array",
          "description": "Roles assigned to the resource.",
          "items": {
            "type": "string"
          }
        },
        "password": {
          "type": "string",
          "description": "Password for the resource (never included)."
        },
        "capabilities": {
          "type": "array",
          "description": "All capabilities assigned to the resource.",
          "items": {
            "type": "string"
          }
        },
        "extra_capabilities": {
          "type": "array",
          "description": "Any extra capabilities assigned to the resource.",
          "items": {
            "type": "string"
          }
        },
        "avatar_urls": {
          "type": "array",
          "description": "Avatar URLs for the resource.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "comment": {
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the object."
        },
        "author": {
          "type": "string",
          "description": "The id for the author of the object."
        },
        "author_email": {
          "type": "string",
          "description": "Email address for the object author."
        },
        "author_ip": {
          "type": "string",
          "description": "IP address for the object author."
        },
        "author_name": {
          "type": "string",
          "description": "Display name for the object author."
        },
        "author_url": {
          "type": "string",
          "description": "URL for the object author."
        },
        "author_user_agent": {
          "type": "string",
          "description": "User agent for the object author."
        },
        "content": {
          "type": "string",
          "description": "The content for the object."
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date the object was published, in the site's timezone."
        },
        "date_gmt": {
          "type": "string",
          "format": "date-time",
          "description": "The date the object was published, as GMT."
        },
        "karma": {
          "type": "string",
          "description": "Karma for the object"
        },
        "link": {
          "type": "string",
          "description": "URL to the object."
        },
        "parent": {
          "type": "integer",
          "description": "The id for the parent of the object."
        },
        "post": {
          "type": "string",
          "description": "The id for the associated post of the resource."
        },
        "status": {
          "type": "string",
          "description": "A named status for the object.",
          "enum": [
            "publish",
            "future",
            "draft",
            "pending",
            "private"
          ]
        },
        "type": {
          "type": "string",
          "description": "Type of Post for the object."
        },
        "author_avatar_urls": {
          "type": "string",
          "description": "Avatar URLs for the object author."
        }
      }
    },
    "status": {
      "properties": {
        "private": {
          "type": "boolean",
          "description": "Whether posts with this resource should be private."
        },
        "protected": {
          "type": "boolean",
          "description": "Whether posts with this resource should be protected."
        },
        "public": {
          "type": "boolean",
          "description": "Whether posts of this resource should be shown in the front end of the site."
        },
        "queryable": {
          "type": "boolean",
          "description": "Whether posts with this resource should be publicly-queryable."
        },
        "show_in_list": {
          "type": "boolean",
          "description": "Whether to include posts in the edit listing for their post type."
        },
        "name": {
          "type": "string",
          "description": "The title for the resource."
        },
        "slug": {
          "type": "string",
          "description": "An alphanumeric identifier for the object unique to its type."
        }
      }
    },
    "taxonomy": {
      "allOf": [
        {
          "$ref": "#/definitions/type"
        },
        {
          "type": "object",
          "properties": {
            "show_cloud": {
              "type": "boolean",
              "description": "Whether or not the term cloud should be displayed."
            },
            "types": {
              "type": "array",
              "description": "Types associated with resource.",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "category": {
      "allOf": [
        {
          "$ref": "#/definitions/tag"
        },
        {
          "type": "object",
          "properties": {
            "parent": {
              "type": "integer",
              "description": "The id for the parent of the object."
            }
          }
        }
      ]
    },
    "tag": {
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the object."
        },
        "count": {
          "type": "integer",
          "description": "Number of published posts for the resource."
        },
        "description": {
          "type": "string",
          "description": "The description for the resource."
        },
        "link": {
          "type": "string",
          "description": "URL to the object."
        },
        "name": {
          "type": "string",
          "description": "The title for the resource."
        },
        "slug": {
          "type": "string",
          "description": "An alphanumeric identifier for the object unique to its type."
        },
        "taxonomy": {
          "type": "string",
          "description": "Type attribution for the resource.",
          "enum": [
            "category",
            "post_tag",
            "nav_menu",
            "link_category",
            "post_format"
          ]
        }
      }
    },
    "type": {
      "properties": {
        "capabilities": {
          "type": "array",
          "description": "All capabilities used by the resource.",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "description": "A human-readable description of the resource."
        },
        "hierarchical": {
          "type": "string",
          "description": "Whether or not the resource should have children."
        },
        "labels": {
          "type": "string",
          "description": "Human-readable labels for the resource for various contexts."
        },
        "name": {
          "type": "string",
          "description": "The title for the resource."
        },
        "slug": {
          "type": "string",
          "description": "An alphanumeric identifier for the object unique to its type."
        }
      }
    },
    "media": {
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date the object was published, in the site's timezone."
        },
        "date_gmt": {
          "type": "string",
          "format": "date-time",
          "description": "The date the object was published, as GMT."
        },
        "guid": {
          "type": "string",
          "description": "The globally unique identifier for the object."
        },
        "id": {
          "type": "integer",
          "description": "Unique identifier for the object."
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date the object was last modified, in the site's timezone."
        },
        "modified_gmt": {
          "type": "string",
          "format": "date-time",
          "description": "The date the object was last modified, as GMT."
        },
        "password": {
          "type": "string",
          "description": "The A password to protect access to the post."
        },
        "slug": {
          "type": "string",
          "description": "An alphanumeric identifier for the object unique to its type."
        },
        "status": {
          "type": "string",
          "description": "A named status for the object.",
          "enum": [
            "publish",
            "future",
            "draft",
            "pending",
            "private"
          ]
        },
        "type": {
          "type": "string",
          "description": "Type of Post for the object."
        },
        "title": {
          "type": "string",
          "description": "The title for the object."
        },
        "author": {
          "type": "string",
          "description": "The id for the author of the object."
        },
        "comment_status": {
          "type": "string",
          "description": "Whether or not comments are open on the object",
          "enum": [
            "open",
            "closed"
          ]
        },
        "ping_status": {
          "type": "string",
          "description": "Whether or not the object can be pinged.",
          "enum": [
            "open",
            "closed"
          ]
        },
        "alt_text": {
          "type": "string",
          "description": "Alternative text to display when resource is not displayed"
        },
        "caption": {
          "type": "string",
          "description": "The caption for the resource."
        },
        "description": {
          "type": "string",
          "description": "The description for the resource."
        },
        "media_type": {
          "type": "string",
          "description": "Type of resource.",
          "enum": [
            "image",
            "file"
          ]
        },
        "mime_type": {
          "type": "string",
          "description": "Mime type of resource."
        },
        "media_details": {
          "type": "string",
          "description": "Details about the resource file, specific to its type."
        },
        "post": {
          "type": "string",
          "description": "The id for the associated post of the resource."
        },
        "source_url": {
          "type": "string",
          "description": "URL to the original resource file."
        }
      }
    },
    "revision": {
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date the object was published, in the site's timezone."
        },
        "date_gmt": {
          "type": "string",
          "format": "date-time",
          "description": "The date the object was published, as GMT."
        },
        "guid": {
          "type": "string",
          "description": "The globally unique identifier for the object."
        },
        "id": {
          "type": "integer",
          "description": "Unique identifier for the object."
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date the object was last modified, in the site's timezone."
        },
        "modified_gmt": {
          "type": "string",
          "format": "date-time",
          "description": "The date the object was last modified, as GMT."
        },
        "slug": {
          "type": "string",
          "description": "An alphanumeric identifier for the object unique to its type."
        },
        "title": {
          "type": "string",
          "description": "The title for the object."
        },
        "content": {
          "type": "string",
          "description": "The content for the object."
        },
        "author": {
          "type": "string",
          "description": "The id for the author of the object."
        },
        "excerpt": {
          "type": "string",
          "description": "The excerpt for the object"
        },
        "parent": {
          "type": "integer",
          "description": "The id for the parent of the object."
        }
      }
    },
    "page": {
      "allOf": [
        {
          "$ref": "#/definitions/commonPostPage"
        },
        {
          "type": "object",
          "properties": {
            "parent": {
              "type": "integer",
              "description": "The id for the parent of the object."
            },
            "menu_order": {
              "type": "integer",
              "description": "The order of the object in relation to other object of its type."
            },
            "template": {
              "type": "integer",
              "description": "The theme file to use to display the object."
            }
          }
        }
      ]
    }
  },
  "parameters": {
    "after": {
      "name": "after",
      "in": "query",
      "description": "Limit response to resources published after a given ISO8601 compliant date.",
      "required": false,
      "type": "string",
      "format": "date-time"
    },
    "author": {
      "name": "author",
      "in": "query",
      "description": "Limit result set to posts assigned to specific authors.",
      "required": false,
      "type": "array",
      "items": {
        "type": "integer"
      },
      "collectionFormat": "multi"
    },
    "author_exclude": {
      "name": "author_exclude",
      "in": "query",
      "description": "Ensure result set excludes posts assigned to specific authors.",
      "required": false,
      "type": "array",
      "items": {
        "type": "integer"
      },
      "collectionFormat": "multi"
    },
    "before": {
      "name": "before",
      "in": "query",
      "description": "Limit response to resources published before a given ISO8601 compliant date.",
      "required": false,
      "type": "string",
      "format": "date-time"
    },
    "categories": {
      "name": "categories",
      "in": "query",
      "description": "Limit result set to all items that have the specified term assigned in the categories taxonomy.",
      "required": false,
      "type": "array",
      "items": {
        "type": "integer"
      },
      "collectionFormat": "multi"
    },
    "categories_exclode": {
      "name": "categories_exclude",
      "in": "query",
      "description": "Limit result set to all items except those that have the specified term assigned in the categories taxonomy.",
      "required": false,
      "type": "array",
      "items": {
        "type": "integer"
      },
      "collectionFormat": "multi"
    },
    "context": {
      "name": "context",
      "in": "query",
      "description": "Scope under which the request is made; determines fields present in response.\n\nDefault: `view`\n\nOne of: `view`, `embed`, `edit`",
      "required": false,
      "type": "string",
      "default": "view",
      "enum": [
        "view",
        "embed",
        "edit"
      ]
    },
    "exclude": {
      "name": "exclude",
      "in": "query",
      "description": "Ensure result set excludes specific IDs.",
      "required": false,
      "type": "array",
      "items": {
        "type": "integer"
      },
      "collectionFormat": "multi"
    },
    "id": {
      "name": "id",
      "in": "path",
      "description": "Unique identifier of the object.",
      "required": true,
      "type": "integer"
    },
    "id.parent": {
      "name": "parent",
      "in": "path",
      "description": "The ID of the parent of the object.",
      "required": true,
      "type": "integer"
    },
    "include": {
      "name": "include",
      "in": "query",
      "description": "Ensure result set includes specific IDs.",
      "required": false,
      "type": "array",
      "items": {
        "type": "integer"
      },
      "collectionFormat": "multi"
    },
    "offset": {
      "name": "offset",
      "in": "query",
      "description": "Offset the result set by a specific number of items.",
      "required": false,
      "type": "integer"
    },
    "order": {
      "name": "order",
      "in": "query",
      "description": "Order sort attribute ascending or descending.\n\nDefault: `desc`\n\nOne of: `asc`, `desc`",
      "required": false,
      "type": "string",
      "default": "desc",
      "enum": [
        "asc",
        "desc"
      ]
    },
    "orderby": {
      "name": "orderby",
      "in": "query",
      "description": "Sort collection by object attribute.\n\nDefault: `date`\n\nOne of: `author`, `date`, `id`, `include`, `modified`, `parent`, `relevance`, `slug`, `title`",
      "required": false,
      "type": "string",
      "default": "date",
      "enum": [
        "author",
        "date",
        "id",
        "include",
        "modified",
        "parent",
        "relevance",
        "slug",
        "title"
      ]
    },
    "orderby.category": {
      "name": "orderby",
      "in": "query",
      "description": "Sort collection by term attribute.\n\nDefault: `name`\n\nOne of: `id`, `include`, `name`, `slug`, `term_group`, `description`, `count`",
      "required": false,
      "type": "string",
      "default": "name",
      "enum": [
        "id",
        "include",
        "name",
        "slug",
        "term_group",
        "description",
        "count"
      ]
    },
    "page": {
      "name": "page",
      "in": "query",
      "description": "Current page of the collection.\n\nDefault: `1`",
      "required": false,
      "type": "integer",
      "default": 1
    },
    "per_page": {
      "name": "per_page",
      "in": "query",
      "description": "Maximum number of items to be returned in result set.\n\nDefault: `10`",
      "required": false,
      "type": "integer",
      "default": 10
    },
    "search": {
      "name": "search",
      "in": "query",
      "description": "Limit results to those matching a string.",
      "required": false,
      "type": "string"
    },
    "slug": {
      "name": "slug",
      "in": "query",
      "description": "Limit result set to posts with one or more specific slugs.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "status": {
      "name": "status",
      "in": "query",
      "description": "Limit result set to posts assigned one or more statuses.\n\nDefault: `publish`",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "sticky": {
      "name": "sticky",
      "in": "query",
      "description": "Limit result set to items that are sticky.",
      "required": false,
      "type": "boolean"
    },
    "tags": {
      "name": "tags",
      "in": "query",
      "description": "Limit result set to all items that have the specified term assigned in the tags taxonomy.",
      "required": false,
      "type": "array",
      "items": {
        "type": "integer"
      },
      "collectionFormat": "multi"
    },
    "tags_exclode": {
      "name": "tags_exclude",
      "in": "query",
      "description": "Limit result set to all items except those that have the specified term assigned in the tags taxonomy.",
      "required": false,
      "type": "array",
      "items": {
        "type": "integer"
      },
      "collectionFormat": "multi"
    },
    "force": {
      "name": "force",
      "in": "query",
      "description": "Whether to bypass trash and force deletion.",
      "required": false,
      "type": "boolean"
    },
    "filter": {
      "name": "filter",
      "in": "query",
      "description": "Use WP Query arguments to modify the response; private query vars require appropriate authorization.",
      "required": false,
      "type": "string"
    },
    "date": {
      "name": "date",
      "in": "query",
      "description": "The date the object was published, in the site's timezone.",
      "required": false,
      "type": "string",
      "format": "date-time"
    },
    "date_gmt": {
      "name": "date_gmt",
      "in": "query",
      "description": "The date the object was published, as GMT.",
      "required": false,
      "type": "string",
      "format": "date-time"
    },
    "password": {
      "name": "password",
      "in": "query",
      "description": "The A password to protect access to the post.",
      "required": false,
      "type": "string"
    },
    "title": {
      "name": "title",
      "in": "query",
      "description": "The title for the object.",
      "required": false,
      "type": "string"
    },
    "content": {
      "name": "content",
      "in": "query",
      "description": "The content for the object.",
      "required": false,
      "type": "string"
    },
    "excerpt": {
      "name": "excerpt",
      "in": "query",
      "description": "The excerpt for the object",
      "required": false,
      "type": "string"
    },
    "featured_media": {
      "name": "featured_media",
      "in": "query",
      "description": "The id of the featured media for the object.",
      "required": false,
      "type": "string"
    },
    "comment_status": {
      "name": "comment_status",
      "in": "query",
      "description": "Whether or not comments are open on the object",
      "required": false,
      "type": "string",
      "enum": [
        "open",
        "closed"
      ]
    },
    "ping_status": {
      "name": "ping_status",
      "in": "query",
      "description": "Whether or not the object can be pinged.",
      "required": false,
      "type": "string",
      "enum": [
        "open",
        "closed"
      ]
    },
    "menu_order": {
      "name": "menu_order",
      "in": "query",
      "description": "The order of the object in relation to other object of its type.",
      "required": false,
      "type": "integer"
    },
    "template": {
      "name": "template",
      "in": "query",
      "description": "The theme file to use to display the object.",
      "required": false,
      "type": "integer"
    },
    "parent": {
      "name": "parent",
      "in": "query",
      "required": false,
      "type": "integer"
    },
    "parent_exclude": {
      "name": "parent_exclude",
      "in": "query",
      "description": "Ensure result set excludes specific ids.",
      "required": false,
      "type": "string"
    },
    "post": {
      "name": "post",
      "in": "query",
      "description": "The id for the associated post of the resource.",
      "required": false,
      "type": "string"
    },
    "description": {
      "name": "description",
      "in": "query",
      "description": "The description for the resource",
      "required": false,
      "type": "string"
    },
    "caption": {
      "name": "caption",
      "in": "query",
      "description": "The caption for the resource.",
      "required": false,
      "type": "string"
    },
    "alt_text": {
      "name": "alt_text",
      "in": "query",
      "description": "Alternative text to display when resource is not displayed.",
      "required": false,
      "type": "string"
    },
    "author_email": {
      "name": "author_email",
      "in": "query",
      "description": "Limit result set to that from a specific author email. Requires authorization.",
      "required": false,
      "type": "string"
    },
    "karma": {
      "name": "karma",
      "in": "query",
      "description": "Limit result set to that of a particular comment karma. Requires authorization",
      "required": false,
      "type": "string"
    },
    "name": {
      "name": "name",
      "in": "query",
      "description": "HTML title for the resource.",
      "required": false,
      "type": "string"
    },
    "hide_empty": {
      "name": "hide_empty",
      "in": "query",
      "description": "Whether to hide resources not assigned to any posts.",
      "required": false,
      "type": "boolean"
    },
    "nickname": {
      "name": "nickname",
      "in": "query",
      "description": "The nickname for the resource.",
      "required": false,
      "type": "string"
    },
    "last_name": {
      "name": "last_name",
      "in": "query",
      "description": "The last name for the resource.",
      "required": false,
      "type": "string"
    },
    "first_name": {
      "name": "first_name",
      "in": "query",
      "description": "The first name for the resource.",
      "required": false,
      "type": "string"
    },
    "username": {
      "name": "username",
      "in": "query",
      "description": "The user name for the resource.",
      "required": false,
      "type": "string"
    },
    "url": {
      "name": "url",
      "in": "query",
      "description": "URL of the resource.",
      "required": false,
      "type": "string",
      "format": "url"
    },
    "email": {
      "name": "email",
      "in": "query",
      "description": "Email of the resource.",
      "required": false,
      "type": "string",
      "format": "email"
    },
    "typeOfComment": {
      "name": "type",
      "in": "query",
      "description": "Limit result set to comments assigned a specific type. Requires authorization. Default comment",
      "required": false,
      "type": "string"
    },
    "typeOfTaxonomy": {
      "name": "type",
      "in": "query",
      "description": "Limit results to taxonomies associated with a specific post type.",
      "required": false,
      "type": "string"
    },
    "media_type": {
      "name": "media_type",
      "in": "query",
      "description": "Type of resource.",
      "required": false,
      "type": "string",
      "enum": [
        "file",
        "image"
      ]
    },
    "mime_type": {
      "name": "mime_type",
      "in": "query",
      "description": "Alternative text to display when resource is not displayed.",
      "required": false,
      "type": "string"
    },
    "capabilities": {
      "name": "capabilities",
      "in": "query",
      "description": "All capabilities used by the resource.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "roles": {
      "name": "roles",
      "in": "query",
      "description": "Roles assigned to the resource.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "reassign": {
      "name": "reassign",
      "in": "query",
      "required": false,
      "type": "string"
    }
  }
}

