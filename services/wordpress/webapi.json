{
    "swagger": "3.0",
    "info": {
      "title": "WordPress REST API",
      "description": "For API details, see <https://developer.wordpress.org/rest-api/reference/>.",
      "version": "5.8.1"
    },
    "host": "localhost:80",
    "basePath": "/index.php/wp-json",
    "tags": [],
    "schemes": [
      "http"
    ],
    "paths": {
      "/wp/v2/posts": {
        "get": {
          "tags": [
            "posts"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of the collection.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "per_page",
              "in": "query",
              "description": "Maximum number of items to be returned in result set.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 1
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "after",
              "in": "query",
              "description": "Limit response to posts published after a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "modified_after",
              "in": "query",
              "description": "Limit response to posts modified after a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "author",
              "in": "query",
              "description": "Limit result set to posts assigned to specific authors.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "author_exclude",
              "in": "query",
              "description": "Ensure result set excludes posts assigned to specific authors.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Limit response to posts published before a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "modified_before",
              "in": "query",
              "description": "Limit response to posts modified before a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "exclude",
              "in": "query",
              "description": "Ensure result set excludes specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "Limit result set to specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Offset the result set by a specific number of items.",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order sort attribute ascending or descending.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "default": "desc"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "orderby",
              "in": "query",
              "description": "Sort collection by post attribute.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "author",
                  "date",
                  "id",
                  "include",
                  "modified",
                  "parent",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title"
                ],
                "default": "date"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "Limit result set to posts with one or more specific slugs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Limit result set to posts assigned one or more statuses.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "tax_relation",
              "in": "query",
              "description": "Limit result set based on relationship between multiple taxonomies.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "AND",
                  "OR"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "categories",
              "in": "query",
              "description": "Limit result set to items with specific terms assigned in the categories taxonomy.",
              "required": false,
              "type": "string"
            },
            {
              "name": "categories_exclude",
              "in": "query",
              "description": "Limit result set to items except those with specific terms assigned in the categories taxonomy.",
              "required": false,
              "type": "string"
            },
            {
              "name": "tags",
              "in": "query",
              "description": "Limit result set to items with specific terms assigned in the tags taxonomy.",
              "required": false,
              "type": "string"
            },
            {
              "name": "tags_exclude",
              "in": "query",
              "description": "Limit result set to items except those with specific terms assigned in the tags taxonomy.",
              "required": false,
              "type": "string"
            },
            {
              "name": "sticky",
              "in": "query",
              "description": "Limit result set to items that are sticky.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "posts"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "date",
              "in": "formData",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "formData",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "formData",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "formData",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "formData",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author",
              "in": "formData",
              "description": "The ID for the author of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "excerpt",
              "in": "formData",
              "description": "The excerpt for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "featured_media",
              "in": "formData",
              "description": "The ID of the featured media for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_status",
              "in": "formData",
              "description": "Whether or not comments are open on the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ping_status",
              "in": "formData",
              "description": "Whether or not the post can be pinged.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "format",
              "in": "formData",
              "description": "The format for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "standard",
                  "aside",
                  "chat",
                  "gallery",
                  "link",
                  "image",
                  "quote",
                  "status",
                  "video",
                  "audio"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "sticky",
              "in": "formData",
              "description": "Whether or not the post should be treated as sticky.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "formData",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "categories",
              "in": "formData",
              "description": "The terms assigned to the post in the category taxonomy.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "tags",
              "in": "formData",
              "description": "The terms assigned to the post in the post_tag taxonomy.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/posts/{id}": {
        "get": {
          "tags": [
            "posts"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "query",
              "description": "The password for the post if it is password protected.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "posts"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "formData",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "formData",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "formData",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "formData",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "formData",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author",
              "in": "formData",
              "description": "The ID for the author of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "excerpt",
              "in": "formData",
              "description": "The excerpt for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "featured_media",
              "in": "formData",
              "description": "The ID of the featured media for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_status",
              "in": "formData",
              "description": "Whether or not comments are open on the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ping_status",
              "in": "formData",
              "description": "Whether or not the post can be pinged.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "format",
              "in": "formData",
              "description": "The format for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "standard",
                  "aside",
                  "chat",
                  "gallery",
                  "link",
                  "image",
                  "quote",
                  "status",
                  "video",
                  "audio"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "sticky",
              "in": "formData",
              "description": "Whether or not the post should be treated as sticky.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "formData",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "categories",
              "in": "formData",
              "description": "The terms assigned to the post in the category taxonomy.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "tags",
              "in": "formData",
              "description": "The terms assigned to the post in the post_tag taxonomy.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "posts"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "query",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "query",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "query",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "query",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author",
              "in": "query",
              "description": "The ID for the author of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "excerpt",
              "in": "query",
              "description": "The excerpt for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "featured_media",
              "in": "query",
              "description": "The ID of the featured media for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_status",
              "in": "query",
              "description": "Whether or not comments are open on the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ping_status",
              "in": "query",
              "description": "Whether or not the post can be pinged.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "format",
              "in": "query",
              "description": "The format for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "standard",
                  "aside",
                  "chat",
                  "gallery",
                  "link",
                  "image",
                  "quote",
                  "status",
                  "video",
                  "audio"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "sticky",
              "in": "query",
              "description": "Whether or not the post should be treated as sticky.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "query",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "categories",
              "in": "query",
              "description": "The terms assigned to the post in the category taxonomy.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "tags",
              "in": "query",
              "description": "The terms assigned to the post in the post_tag taxonomy.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "posts"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "query",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "query",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "query",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "query",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author",
              "in": "query",
              "description": "The ID for the author of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "excerpt",
              "in": "query",
              "description": "The excerpt for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "featured_media",
              "in": "query",
              "description": "The ID of the featured media for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_status",
              "in": "query",
              "description": "Whether or not comments are open on the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ping_status",
              "in": "query",
              "description": "Whether or not the post can be pinged.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "format",
              "in": "query",
              "description": "The format for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "standard",
                  "aside",
                  "chat",
                  "gallery",
                  "link",
                  "image",
                  "quote",
                  "status",
                  "video",
                  "audio"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "sticky",
              "in": "query",
              "description": "Whether or not the post should be treated as sticky.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "query",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "categories",
              "in": "query",
              "description": "The terms assigned to the post in the category taxonomy.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "tags",
              "in": "query",
              "description": "The terms assigned to the post in the post_tag taxonomy.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "posts"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "force",
              "in": "query",
              "description": "Whether to bypass Trash and force deletion.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/posts/{parent}/revisions": {
        "get": {
          "tags": [
            "posts"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "path",
              "description": "The ID for the parent of the revision.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of the collection.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "per_page",
              "in": "query",
              "description": "Maximum number of items to be returned in result set.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 1
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "exclude",
              "in": "query",
              "description": "Ensure result set excludes specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "Limit result set to specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Offset the result set by a specific number of items.",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order sort attribute ascending or descending.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "default": "desc"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "orderby",
              "in": "query",
              "description": "Sort collection by object attribute.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "date",
                  "id",
                  "include",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title"
                ],
                "default": "date"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/posts/{parent}": {
        "get": {
          "tags": [
            "posts"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "path",
              "description": "The ID for the parent of the autosave.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "in": "query",
              "description": "The ID for the autosave.",
              "required": false,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/posts/{id}/autosaves": {
        "get": {
          "tags": [
            "posts"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "query",
              "description": "The ID for the parent of the autosave.",
              "required": false,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "posts"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "formData",
              "description": "The ID for the parent of the autosave.",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "in": "formData",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "formData",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "formData",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "formData",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "formData",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author",
              "in": "formData",
              "description": "The ID for the author of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "excerpt",
              "in": "formData",
              "description": "The excerpt for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "featured_media",
              "in": "formData",
              "description": "The ID of the featured media for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_status",
              "in": "formData",
              "description": "Whether or not comments are open on the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ping_status",
              "in": "formData",
              "description": "Whether or not the post can be pinged.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "format",
              "in": "formData",
              "description": "The format for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "standard",
                  "aside",
                  "chat",
                  "gallery",
                  "link",
                  "image",
                  "quote",
                  "status",
                  "video",
                  "audio"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "sticky",
              "in": "formData",
              "description": "Whether or not the post should be treated as sticky.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "formData",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "categories",
              "in": "formData",
              "description": "The terms assigned to the post in the category taxonomy.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "tags",
              "in": "formData",
              "description": "The terms assigned to the post in the post_tag taxonomy.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/pages": {
        "get": {
          "tags": [
            "pages"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of the collection.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "per_page",
              "in": "query",
              "description": "Maximum number of items to be returned in result set.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 1
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "after",
              "in": "query",
              "description": "Limit response to posts published after a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "modified_after",
              "in": "query",
              "description": "Limit response to posts modified after a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "author",
              "in": "query",
              "description": "Limit result set to posts assigned to specific authors.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "author_exclude",
              "in": "query",
              "description": "Ensure result set excludes posts assigned to specific authors.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Limit response to posts published before a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "modified_before",
              "in": "query",
              "description": "Limit response to posts modified before a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "exclude",
              "in": "query",
              "description": "Ensure result set excludes specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "Limit result set to specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "menu_order",
              "in": "query",
              "description": "Limit result set to posts with a specific menu_order value.",
              "required": false,
              "type": "string"
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Offset the result set by a specific number of items.",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order sort attribute ascending or descending.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "default": "desc"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "orderby",
              "in": "query",
              "description": "Sort collection by post attribute.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "author",
                  "date",
                  "id",
                  "include",
                  "modified",
                  "parent",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title",
                  "menu_order"
                ],
                "default": "date"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "parent",
              "in": "query",
              "description": "Limit result set to items with particular parent IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "parent_exclude",
              "in": "query",
              "description": "Limit result set to all items except those of a particular parent ID.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "slug",
              "in": "query",
              "description": "Limit result set to posts with one or more specific slugs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Limit result set to posts assigned one or more statuses.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "pages"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "date",
              "in": "formData",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "formData",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "formData",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent",
              "in": "formData",
              "description": "The ID for the parent of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "formData",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "formData",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author",
              "in": "formData",
              "description": "The ID for the author of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "excerpt",
              "in": "formData",
              "description": "The excerpt for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "featured_media",
              "in": "formData",
              "description": "The ID of the featured media for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_status",
              "in": "formData",
              "description": "Whether or not comments are open on the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ping_status",
              "in": "formData",
              "description": "Whether or not the post can be pinged.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "menu_order",
              "in": "formData",
              "description": "The order of the post in relation to other posts.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "formData",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/pages/{id}": {
        "get": {
          "tags": [
            "pages"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "query",
              "description": "The password for the post if it is password protected.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "pages"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "formData",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "formData",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "formData",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent",
              "in": "formData",
              "description": "The ID for the parent of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "formData",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "formData",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author",
              "in": "formData",
              "description": "The ID for the author of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "excerpt",
              "in": "formData",
              "description": "The excerpt for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "featured_media",
              "in": "formData",
              "description": "The ID of the featured media for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_status",
              "in": "formData",
              "description": "Whether or not comments are open on the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ping_status",
              "in": "formData",
              "description": "Whether or not the post can be pinged.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "menu_order",
              "in": "formData",
              "description": "The order of the post in relation to other posts.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "formData",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "pages"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "query",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "query",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent",
              "in": "query",
              "description": "The ID for the parent of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "query",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "query",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author",
              "in": "query",
              "description": "The ID for the author of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "excerpt",
              "in": "query",
              "description": "The excerpt for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "featured_media",
              "in": "query",
              "description": "The ID of the featured media for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_status",
              "in": "query",
              "description": "Whether or not comments are open on the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ping_status",
              "in": "query",
              "description": "Whether or not the post can be pinged.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "menu_order",
              "in": "query",
              "description": "The order of the post in relation to other posts.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "query",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "pages"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "query",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "query",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent",
              "in": "query",
              "description": "The ID for the parent of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "query",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "query",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author",
              "in": "query",
              "description": "The ID for the author of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "excerpt",
              "in": "query",
              "description": "The excerpt for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "featured_media",
              "in": "query",
              "description": "The ID of the featured media for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_status",
              "in": "query",
              "description": "Whether or not comments are open on the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ping_status",
              "in": "query",
              "description": "Whether or not the post can be pinged.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "menu_order",
              "in": "query",
              "description": "The order of the post in relation to other posts.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "query",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "pages"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "force",
              "in": "query",
              "description": "Whether to bypass Trash and force deletion.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/pages/{parent}/revisions": {
        "get": {
          "tags": [
            "pages"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "path",
              "description": "The ID for the parent of the revision.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of the collection.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "per_page",
              "in": "query",
              "description": "Maximum number of items to be returned in result set.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 1
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "exclude",
              "in": "query",
              "description": "Ensure result set excludes specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "Limit result set to specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Offset the result set by a specific number of items.",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order sort attribute ascending or descending.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "default": "desc"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "orderby",
              "in": "query",
              "description": "Sort collection by object attribute.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "date",
                  "id",
                  "include",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title"
                ],
                "default": "date"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/pages/{parent}": {
        "get": {
          "tags": [
            "pages"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "path",
              "description": "The ID for the parent of the autosave.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "in": "query",
              "description": "The ID for the autosave.",
              "required": false,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/pages/{id}/autosaves": {
        "get": {
          "tags": [
            "pages"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "query",
              "description": "The ID for the parent of the autosave.",
              "required": false,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "pages"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "formData",
              "description": "The ID for the parent of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "in": "formData",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "formData",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "formData",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "formData",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "formData",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author",
              "in": "formData",
              "description": "The ID for the author of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "excerpt",
              "in": "formData",
              "description": "The excerpt for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "featured_media",
              "in": "formData",
              "description": "The ID of the featured media for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_status",
              "in": "formData",
              "description": "Whether or not comments are open on the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ping_status",
              "in": "formData",
              "description": "Whether or not the post can be pinged.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "menu_order",
              "in": "formData",
              "description": "The order of the post in relation to other posts.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "formData",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/media": {
        "get": {
          "tags": [
            "media"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of the collection.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "per_page",
              "in": "query",
              "description": "Maximum number of items to be returned in result set.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 1
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "after",
              "in": "query",
              "description": "Limit response to posts published after a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "modified_after",
              "in": "query",
              "description": "Limit response to posts modified after a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "author",
              "in": "query",
              "description": "Limit result set to posts assigned to specific authors.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "author_exclude",
              "in": "query",
              "description": "Ensure result set excludes posts assigned to specific authors.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Limit response to posts published before a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "modified_before",
              "in": "query",
              "description": "Limit response to posts modified before a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "exclude",
              "in": "query",
              "description": "Ensure result set excludes specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "Limit result set to specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Offset the result set by a specific number of items.",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order sort attribute ascending or descending.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "default": "desc"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "orderby",
              "in": "query",
              "description": "Sort collection by post attribute.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "author",
                  "date",
                  "id",
                  "include",
                  "modified",
                  "parent",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title"
                ],
                "default": "date"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "parent",
              "in": "query",
              "description": "Limit result set to items with particular parent IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "parent_exclude",
              "in": "query",
              "description": "Limit result set to all items except those of a particular parent ID.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "slug",
              "in": "query",
              "description": "Limit result set to posts with one or more specific slugs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Limit result set to posts assigned one or more statuses.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "media_type",
              "in": "query",
              "description": "Limit result set to attachments of a particular media type.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "image",
                  "video",
                  "text",
                  "application",
                  "audio"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "mime_type",
              "in": "query",
              "description": "Limit result set to attachments of a particular MIME type.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "media"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "date",
              "in": "formData",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "formData",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "title",
              "in": "formData",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author",
              "in": "formData",
              "description": "The ID for the author of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_status",
              "in": "formData",
              "description": "Whether or not comments are open on the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ping_status",
              "in": "formData",
              "description": "Whether or not the post can be pinged.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "formData",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "alt_text",
              "in": "formData",
              "description": "Alternative text to display when attachment is not displayed.",
              "required": false,
              "type": "string"
            },
            {
              "name": "caption",
              "in": "formData",
              "description": "The attachment caption.",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "in": "formData",
              "description": "The attachment description.",
              "required": false,
              "type": "string"
            },
            {
              "name": "post",
              "in": "formData",
              "description": "The ID for the associated post of the attachment.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/media/{id}": {
        "get": {
          "tags": [
            "media"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "media"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "formData",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "formData",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "title",
              "in": "formData",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author",
              "in": "formData",
              "description": "The ID for the author of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_status",
              "in": "formData",
              "description": "Whether or not comments are open on the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ping_status",
              "in": "formData",
              "description": "Whether or not the post can be pinged.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "formData",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "alt_text",
              "in": "formData",
              "description": "Alternative text to display when attachment is not displayed.",
              "required": false,
              "type": "string"
            },
            {
              "name": "caption",
              "in": "formData",
              "description": "The attachment caption.",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "in": "formData",
              "description": "The attachment description.",
              "required": false,
              "type": "string"
            },
            {
              "name": "post",
              "in": "formData",
              "description": "The ID for the associated post of the attachment.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "media"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "query",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "title",
              "in": "query",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author",
              "in": "query",
              "description": "The ID for the author of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_status",
              "in": "query",
              "description": "Whether or not comments are open on the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ping_status",
              "in": "query",
              "description": "Whether or not the post can be pinged.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "query",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "alt_text",
              "in": "query",
              "description": "Alternative text to display when attachment is not displayed.",
              "required": false,
              "type": "string"
            },
            {
              "name": "caption",
              "in": "query",
              "description": "The attachment caption.",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "in": "query",
              "description": "The attachment description.",
              "required": false,
              "type": "string"
            },
            {
              "name": "post",
              "in": "query",
              "description": "The ID for the associated post of the attachment.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "media"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "query",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "title",
              "in": "query",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author",
              "in": "query",
              "description": "The ID for the author of the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "comment_status",
              "in": "query",
              "description": "Whether or not comments are open on the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ping_status",
              "in": "query",
              "description": "Whether or not the post can be pinged.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "query",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "alt_text",
              "in": "query",
              "description": "Alternative text to display when attachment is not displayed.",
              "required": false,
              "type": "string"
            },
            {
              "name": "caption",
              "in": "query",
              "description": "The attachment caption.",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "in": "query",
              "description": "The attachment description.",
              "required": false,
              "type": "string"
            },
            {
              "name": "post",
              "in": "query",
              "description": "The ID for the associated post of the attachment.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "media"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "force",
              "in": "query",
              "description": "Whether to bypass Trash and force deletion.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/media/{id}/post-process": {
        "post": {
          "tags": [
            "media"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the attachment.",
              "required": true,
              "type": "string"
            },
            {
              "name": "action",
              "in": "formData",
              "description": "",
              "required": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "create-image-subsizes"
                ]
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/media/{id}/edit": {
        "post": {
          "tags": [
            "media"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "src",
              "in": "formData",
              "description": "URL to the edited image file.",
              "required": true,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "modifiers",
              "in": "formData",
              "description": "Array of image edits.",
              "required": false,
              "type": "string",
              "items": {
                "type": "object"
              }
            },
            {
              "name": "rotation",
              "in": "formData",
              "description": "The amount to rotate the image clockwise in degrees. DEPRECATED: Use `modifiers` instead.",
              "required": false,
              "type": "string",
              "maximum": 360,
              "minimum": 0
            },
            {
              "name": "x",
              "in": "formData",
              "description": "As a percentage of the image, the x position to start the crop from. DEPRECATED: Use `modifiers` instead.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 0
            },
            {
              "name": "y",
              "in": "formData",
              "description": "As a percentage of the image, the y position to start the crop from. DEPRECATED: Use `modifiers` instead.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 0
            },
            {
              "name": "width",
              "in": "formData",
              "description": "As a percentage of the image, the width to crop the image to. DEPRECATED: Use `modifiers` instead.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 0
            },
            {
              "name": "height",
              "in": "formData",
              "description": "As a percentage of the image, the height to crop the image to. DEPRECATED: Use `modifiers` instead.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 0
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/blocks": {
        "get": {
          "tags": [
            "blocks"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of the collection.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "per_page",
              "in": "query",
              "description": "Maximum number of items to be returned in result set.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 1
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "after",
              "in": "query",
              "description": "Limit response to posts published after a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "modified_after",
              "in": "query",
              "description": "Limit response to posts modified after a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "before",
              "in": "query",
              "description": "Limit response to posts published before a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "modified_before",
              "in": "query",
              "description": "Limit response to posts modified before a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "exclude",
              "in": "query",
              "description": "Ensure result set excludes specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "Limit result set to specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Offset the result set by a specific number of items.",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order sort attribute ascending or descending.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "default": "desc"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "orderby",
              "in": "query",
              "description": "Sort collection by post attribute.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "author",
                  "date",
                  "id",
                  "include",
                  "modified",
                  "parent",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title"
                ],
                "default": "date"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "Limit result set to posts with one or more specific slugs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Limit result set to posts assigned one or more statuses.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "blocks"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "date",
              "in": "formData",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "formData",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "formData",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "formData",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "formData",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "formData",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/blocks/{id}": {
        "get": {
          "tags": [
            "blocks"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "query",
              "description": "The password for the post if it is password protected.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "blocks"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "formData",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "formData",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "formData",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "formData",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "formData",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "formData",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "blocks"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "query",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "query",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "query",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "query",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "query",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "blocks"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "query",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "query",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "query",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "query",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "query",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "blocks"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the post.",
              "required": true,
              "type": "string"
            },
            {
              "name": "force",
              "in": "query",
              "description": "Whether to bypass Trash and force deletion.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/blocks/{parent}/revisions": {
        "get": {
          "tags": [
            "blocks"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "path",
              "description": "The ID for the parent of the revision.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of the collection.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "per_page",
              "in": "query",
              "description": "Maximum number of items to be returned in result set.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 1
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "exclude",
              "in": "query",
              "description": "Ensure result set excludes specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "Limit result set to specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Offset the result set by a specific number of items.",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order sort attribute ascending or descending.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "default": "desc"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "orderby",
              "in": "query",
              "description": "Sort collection by object attribute.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "date",
                  "id",
                  "include",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title"
                ],
                "default": "date"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/blocks/{parent}": {
        "get": {
          "tags": [
            "blocks"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "path",
              "description": "The ID for the parent of the autosave.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "in": "query",
              "description": "The ID for the autosave.",
              "required": false,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/blocks/{id}/autosaves": {
        "get": {
          "tags": [
            "blocks"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "query",
              "description": "The ID for the parent of the autosave.",
              "required": false,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "blocks"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "formData",
              "description": "The ID for the parent of the autosave.",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "in": "formData",
              "description": "The date the post was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "formData",
              "description": "The date the post was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the post unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "A named status for the post.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "formData",
              "description": "A password to protect access to the content and excerpt.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "formData",
              "description": "The title for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "formData",
              "description": "The content for the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "template",
              "in": "formData",
              "description": "The theme file to use to display the post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/templates": {
        "get": {
          "tags": [
            "templates"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "wp_id",
              "in": "query",
              "description": "Limit to the specified post id.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "templates"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "slug",
              "in": "formData",
              "description": "Unique slug identifying the template.",
              "required": true,
              "type": "string"
            },
            {
              "name": "theme",
              "in": "formData",
              "description": "Theme identifier for the template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "formData",
              "description": "Content of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "formData",
              "description": "Title of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "in": "formData",
              "description": "Description of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "Status of template.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/templates/{id}": {
        "get": {
          "tags": [
            "templates"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The id of a template",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "templates"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "slug",
              "in": "formData",
              "description": "Unique slug identifying the template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "theme",
              "in": "formData",
              "description": "Theme identifier for the template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "formData",
              "description": "Content of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "formData",
              "description": "Title of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "in": "formData",
              "description": "Description of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "Status of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "templates"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "slug",
              "in": "query",
              "description": "Unique slug identifying the template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "theme",
              "in": "query",
              "description": "Theme identifier for the template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "query",
              "description": "Content of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "query",
              "description": "Title of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "in": "query",
              "description": "Description of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "Status of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "templates"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "slug",
              "in": "query",
              "description": "Unique slug identifying the template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "theme",
              "in": "query",
              "description": "Theme identifier for the template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "query",
              "description": "Content of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "query",
              "description": "Title of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "in": "query",
              "description": "Description of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "Status of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "templates"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "force",
              "in": "query",
              "description": "Whether to bypass Trash and force deletion.",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/templates/{parent}/revisions": {
        "get": {
          "tags": [
            "templates"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "path",
              "description": "The ID for the parent of the revision.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of the collection.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "per_page",
              "in": "query",
              "description": "Maximum number of items to be returned in result set.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 1
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "exclude",
              "in": "query",
              "description": "Ensure result set excludes specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "Limit result set to specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Offset the result set by a specific number of items.",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order sort attribute ascending or descending.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "default": "desc"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "orderby",
              "in": "query",
              "description": "Sort collection by object attribute.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "date",
                  "id",
                  "include",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title"
                ],
                "default": "date"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/templates/{parent}": {
        "get": {
          "tags": [
            "templates"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "path",
              "description": "The ID for the parent of the autosave.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "in": "query",
              "description": "The ID for the autosave.",
              "required": false,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/templates/{id}/autosaves": {
        "get": {
          "tags": [
            "templates"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "query",
              "description": "The ID for the parent of the autosave.",
              "required": false,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "templates"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "parent",
              "in": "formData",
              "description": "The ID for the parent of the autosave.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "Unique slug identifying the template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "theme",
              "in": "formData",
              "description": "Theme identifier for the template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "formData",
              "description": "Content of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "formData",
              "description": "Title of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "in": "formData",
              "description": "Description of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "Status of template.",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/types": {
        "get": {
          "tags": [
            "types"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/types/{type}": {
        "get": {
          "tags": [
            "types"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "type",
              "in": "path",
              "description": "An alphanumeric identifier for the post type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/statuses": {
        "get": {
          "tags": [
            "statuses"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/statuses/{status}": {
        "get": {
          "tags": [
            "statuses"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "status",
              "in": "path",
              "description": "An alphanumeric identifier for the status.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/taxonomies": {
        "get": {
          "tags": [
            "taxonomies"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "type",
              "in": "query",
              "description": "Limit results to taxonomies associated with a specific post type.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/taxonomies/{taxonomy}": {
        "get": {
          "tags": [
            "taxonomies"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "taxonomy",
              "in": "path",
              "description": "An alphanumeric identifier for the taxonomy.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/categories": {
        "get": {
          "tags": [
            "categories"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of the collection.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "per_page",
              "in": "query",
              "description": "Maximum number of items to be returned in result set.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 1
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "exclude",
              "in": "query",
              "description": "Ensure result set excludes specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "Limit result set to specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order sort attribute ascending or descending.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "default": "asc"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "orderby",
              "in": "query",
              "description": "Sort collection by term attribute.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "include",
                  "name",
                  "slug",
                  "include_slugs",
                  "term_group",
                  "description",
                  "count"
                ],
                "default": "name"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "hide_empty",
              "in": "query",
              "description": "Whether to hide terms not assigned to any posts.",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent",
              "in": "query",
              "description": "Limit result set to terms assigned to a specific parent.",
              "required": false,
              "type": "string"
            },
            {
              "name": "post",
              "in": "query",
              "description": "Limit result set to terms assigned to a specific post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "Limit result set to terms with one or more specific slugs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "categories"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "description",
              "in": "formData",
              "description": "HTML description of the term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "formData",
              "description": "HTML title for the term.",
              "required": true,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the term unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent",
              "in": "formData",
              "description": "The parent term ID.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/categories/{id}": {
        "get": {
          "tags": [
            "categories"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the term.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "categories"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the term.",
              "required": true,
              "type": "string"
            },
            {
              "name": "description",
              "in": "formData",
              "description": "HTML description of the term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "formData",
              "description": "HTML title for the term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the term unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent",
              "in": "formData",
              "description": "The parent term ID.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "categories"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the term.",
              "required": true,
              "type": "string"
            },
            {
              "name": "description",
              "in": "query",
              "description": "HTML description of the term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "query",
              "description": "HTML title for the term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the term unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent",
              "in": "query",
              "description": "The parent term ID.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "categories"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the term.",
              "required": true,
              "type": "string"
            },
            {
              "name": "description",
              "in": "query",
              "description": "HTML description of the term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "query",
              "description": "HTML title for the term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the term unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "parent",
              "in": "query",
              "description": "The parent term ID.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "categories"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the term.",
              "required": true,
              "type": "string"
            },
            {
              "name": "force",
              "in": "query",
              "description": "Required to be true, as terms do not support trashing.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/tags": {
        "get": {
          "tags": [
            "tags"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of the collection.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "per_page",
              "in": "query",
              "description": "Maximum number of items to be returned in result set.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 1
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "exclude",
              "in": "query",
              "description": "Ensure result set excludes specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "Limit result set to specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Offset the result set by a specific number of items.",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order sort attribute ascending or descending.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "default": "asc"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "orderby",
              "in": "query",
              "description": "Sort collection by term attribute.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "include",
                  "name",
                  "slug",
                  "include_slugs",
                  "term_group",
                  "description",
                  "count"
                ],
                "default": "name"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "hide_empty",
              "in": "query",
              "description": "Whether to hide terms not assigned to any posts.",
              "required": false,
              "type": "string"
            },
            {
              "name": "post",
              "in": "query",
              "description": "Limit result set to terms assigned to a specific post.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "Limit result set to terms with one or more specific slugs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "tags"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "description",
              "in": "formData",
              "description": "HTML description of the term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "formData",
              "description": "HTML title for the term.",
              "required": true,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the term unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/tags/{id}": {
        "get": {
          "tags": [
            "tags"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the term.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "tags"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the term.",
              "required": true,
              "type": "string"
            },
            {
              "name": "description",
              "in": "formData",
              "description": "HTML description of the term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "formData",
              "description": "HTML title for the term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the term unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "tags"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the term.",
              "required": true,
              "type": "string"
            },
            {
              "name": "description",
              "in": "query",
              "description": "HTML description of the term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "query",
              "description": "HTML title for the term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the term unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "tags"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the term.",
              "required": true,
              "type": "string"
            },
            {
              "name": "description",
              "in": "query",
              "description": "HTML description of the term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "query",
              "description": "HTML title for the term.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the term unique to its type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "tags"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the term.",
              "required": true,
              "type": "string"
            },
            {
              "name": "force",
              "in": "query",
              "description": "Required to be true, as terms do not support trashing.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/users": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of the collection.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "per_page",
              "in": "query",
              "description": "Maximum number of items to be returned in result set.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 1
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "exclude",
              "in": "query",
              "description": "Ensure result set excludes specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "Limit result set to specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Offset the result set by a specific number of items.",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order sort attribute ascending or descending.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "default": "asc"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "orderby",
              "in": "query",
              "description": "Sort collection by user attribute.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "include",
                  "name",
                  "registered_date",
                  "slug",
                  "include_slugs",
                  "email",
                  "url"
                ],
                "default": "name"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "Limit result set to users with one or more specific slugs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "roles",
              "in": "query",
              "description": "Limit result set to users matching at least one specific role provided. Accepts csv list or single role.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "who",
              "in": "query",
              "description": "Limit result set to users who are considered authors.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "authors"
                ]
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "username",
              "in": "formData",
              "description": "Login name for the user.",
              "required": true,
              "type": "string"
            },
            {
              "name": "name",
              "in": "formData",
              "description": "Display name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "first_name",
              "in": "formData",
              "description": "First name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "last_name",
              "in": "formData",
              "description": "Last name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "email",
              "in": "formData",
              "description": "The email address for the user.",
              "required": true,
              "type": "string",
              "format": "email"
            },
            {
              "name": "url",
              "in": "formData",
              "description": "URL of the user.",
              "required": false,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "description",
              "in": "formData",
              "description": "Description of the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "locale",
              "in": "formData",
              "description": "Locale for the user.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "",
                  "en_US"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "nickname",
              "in": "formData",
              "description": "The nickname for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "roles",
              "in": "formData",
              "description": "Roles assigned to the user.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "password",
              "in": "formData",
              "description": "Password for the user (never included).",
              "required": true,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/users/{id}": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the user.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the user.",
              "required": true,
              "type": "string"
            },
            {
              "name": "username",
              "in": "formData",
              "description": "Login name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "formData",
              "description": "Display name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "first_name",
              "in": "formData",
              "description": "First name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "last_name",
              "in": "formData",
              "description": "Last name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "email",
              "in": "formData",
              "description": "The email address for the user.",
              "required": false,
              "type": "string",
              "format": "email"
            },
            {
              "name": "url",
              "in": "formData",
              "description": "URL of the user.",
              "required": false,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "description",
              "in": "formData",
              "description": "Description of the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "locale",
              "in": "formData",
              "description": "Locale for the user.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "",
                  "en_US"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "nickname",
              "in": "formData",
              "description": "The nickname for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "roles",
              "in": "formData",
              "description": "Roles assigned to the user.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "password",
              "in": "formData",
              "description": "Password for the user (never included).",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the user.",
              "required": true,
              "type": "string"
            },
            {
              "name": "username",
              "in": "query",
              "description": "Login name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "query",
              "description": "Display name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "first_name",
              "in": "query",
              "description": "First name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "last_name",
              "in": "query",
              "description": "Last name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "email",
              "in": "query",
              "description": "The email address for the user.",
              "required": false,
              "type": "string",
              "format": "email"
            },
            {
              "name": "url",
              "in": "query",
              "description": "URL of the user.",
              "required": false,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "description",
              "in": "query",
              "description": "Description of the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "locale",
              "in": "query",
              "description": "Locale for the user.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "",
                  "en_US"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "nickname",
              "in": "query",
              "description": "The nickname for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "roles",
              "in": "query",
              "description": "Roles assigned to the user.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "password",
              "in": "query",
              "description": "Password for the user (never included).",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the user.",
              "required": true,
              "type": "string"
            },
            {
              "name": "username",
              "in": "query",
              "description": "Login name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "query",
              "description": "Display name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "first_name",
              "in": "query",
              "description": "First name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "last_name",
              "in": "query",
              "description": "Last name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "email",
              "in": "query",
              "description": "The email address for the user.",
              "required": false,
              "type": "string",
              "format": "email"
            },
            {
              "name": "url",
              "in": "query",
              "description": "URL of the user.",
              "required": false,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "description",
              "in": "query",
              "description": "Description of the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "locale",
              "in": "query",
              "description": "Locale for the user.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "",
                  "en_US"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "nickname",
              "in": "query",
              "description": "The nickname for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "roles",
              "in": "query",
              "description": "Roles assigned to the user.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "password",
              "in": "query",
              "description": "Password for the user (never included).",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the user.",
              "required": true,
              "type": "string"
            },
            {
              "name": "force",
              "in": "query",
              "description": "Required to be true, as users do not support trashing.",
              "required": false,
              "type": "string"
            },
            {
              "name": "reassign",
              "in": "query",
              "description": "Reassign the deleted user's posts and links to this user ID.",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/users/me": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "username",
              "in": "formData",
              "description": "Login name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "formData",
              "description": "Display name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "first_name",
              "in": "formData",
              "description": "First name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "last_name",
              "in": "formData",
              "description": "Last name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "email",
              "in": "formData",
              "description": "The email address for the user.",
              "required": false,
              "type": "string",
              "format": "email"
            },
            {
              "name": "url",
              "in": "formData",
              "description": "URL of the user.",
              "required": false,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "description",
              "in": "formData",
              "description": "Description of the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "locale",
              "in": "formData",
              "description": "Locale for the user.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "",
                  "en_US"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "nickname",
              "in": "formData",
              "description": "The nickname for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "formData",
              "description": "An alphanumeric identifier for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "roles",
              "in": "formData",
              "description": "Roles assigned to the user.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "password",
              "in": "formData",
              "description": "Password for the user (never included).",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "username",
              "in": "query",
              "description": "Login name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "query",
              "description": "Display name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "first_name",
              "in": "query",
              "description": "First name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "last_name",
              "in": "query",
              "description": "Last name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "email",
              "in": "query",
              "description": "The email address for the user.",
              "required": false,
              "type": "string",
              "format": "email"
            },
            {
              "name": "url",
              "in": "query",
              "description": "URL of the user.",
              "required": false,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "description",
              "in": "query",
              "description": "Description of the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "locale",
              "in": "query",
              "description": "Locale for the user.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "",
                  "en_US"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "nickname",
              "in": "query",
              "description": "The nickname for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "roles",
              "in": "query",
              "description": "Roles assigned to the user.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "password",
              "in": "query",
              "description": "Password for the user (never included).",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "username",
              "in": "query",
              "description": "Login name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "query",
              "description": "Display name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "first_name",
              "in": "query",
              "description": "First name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "last_name",
              "in": "query",
              "description": "Last name for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "email",
              "in": "query",
              "description": "The email address for the user.",
              "required": false,
              "type": "string",
              "format": "email"
            },
            {
              "name": "url",
              "in": "query",
              "description": "URL of the user.",
              "required": false,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "description",
              "in": "query",
              "description": "Description of the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "locale",
              "in": "query",
              "description": "Locale for the user.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "",
                  "en_US"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "nickname",
              "in": "query",
              "description": "The nickname for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "slug",
              "in": "query",
              "description": "An alphanumeric identifier for the user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "roles",
              "in": "query",
              "description": "Roles assigned to the user.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "password",
              "in": "query",
              "description": "Password for the user (never included).",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "force",
              "in": "query",
              "description": "Required to be true, as users do not support trashing.",
              "required": false,
              "type": "string"
            },
            {
              "name": "reassign",
              "in": "query",
              "description": "Reassign the deleted user's posts and links to this user ID.",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/users/{user_id}/application-passwords": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "user_id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "app_id",
              "in": "formData",
              "description": "A uuid provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "name",
              "in": "formData",
              "description": "The name of the application password.",
              "required": true,
              "type": "string"
            },
            {
              "name": "user_id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/users/{user_id}/application-passwords/introspect": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "user_id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/users/{user_id}": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "user_id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "app_id",
              "in": "formData",
              "description": "A uuid provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "name",
              "in": "formData",
              "description": "The name of the application password.",
              "required": false,
              "type": "string"
            },
            {
              "name": "user_id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "app_id",
              "in": "query",
              "description": "A uuid provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "name",
              "in": "query",
              "description": "The name of the application password.",
              "required": false,
              "type": "string"
            },
            {
              "name": "user_id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "app_id",
              "in": "query",
              "description": "A uuid provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "name",
              "in": "query",
              "description": "The name of the application password.",
              "required": false,
              "type": "string"
            },
            {
              "name": "user_id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "users"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/comments": {
        "get": {
          "tags": [
            "comments"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of the collection.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "per_page",
              "in": "query",
              "description": "Maximum number of items to be returned in result set.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 1
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "after",
              "in": "query",
              "description": "Limit response to comments published after a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "author",
              "in": "query",
              "description": "Limit result set to comments assigned to specific user IDs. Requires authorization.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "author_exclude",
              "in": "query",
              "description": "Ensure result set excludes comments assigned to specific user IDs. Requires authorization.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "author_email",
              "in": "query",
              "description": "Limit result set to that from a specific author email. Requires authorization.",
              "required": false,
              "type": "string",
              "format": "email"
            },
            {
              "name": "before",
              "in": "query",
              "description": "Limit response to comments published before a given ISO8601 compliant date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "exclude",
              "in": "query",
              "description": "Ensure result set excludes specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "include",
              "in": "query",
              "description": "Limit result set to specific IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Offset the result set by a specific number of items.",
              "required": false,
              "type": "string"
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order sort attribute ascending or descending.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "default": "desc"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "orderby",
              "in": "query",
              "description": "Sort collection by comment attribute.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "date",
                  "date_gmt",
                  "id",
                  "include",
                  "post",
                  "parent",
                  "type"
                ],
                "default": "date_gmt"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "parent",
              "in": "query",
              "description": "Limit result set to comments of specific parent IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "parent_exclude",
              "in": "query",
              "description": "Ensure result set excludes specific parent IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "post",
              "in": "query",
              "description": "Limit result set to comments assigned to specific post IDs.",
              "required": false,
              "type": "string",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Limit result set to comments assigned a specific status. Requires authorization.",
              "required": false,
              "type": "string"
            },
            {
              "name": "type",
              "in": "query",
              "description": "Limit result set to comments assigned a specific type. Requires authorization.",
              "required": false,
              "type": "string"
            },
            {
              "name": "password",
              "in": "query",
              "description": "The password for the post if it is password protected.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "comments"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "author",
              "in": "formData",
              "description": "The ID of the user object, if author was a user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author_email",
              "in": "formData",
              "description": "Email address for the comment author.",
              "required": false,
              "type": "string",
              "format": "email"
            },
            {
              "name": "author_ip",
              "in": "formData",
              "description": "IP address for the comment author.",
              "required": false,
              "type": "string",
              "format": "ip"
            },
            {
              "name": "author_name",
              "in": "formData",
              "description": "Display name for the comment author.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author_url",
              "in": "formData",
              "description": "URL for the comment author.",
              "required": false,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "author_user_agent",
              "in": "formData",
              "description": "User agent for the comment author.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "formData",
              "description": "The content for the comment.",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "in": "formData",
              "description": "The date the comment was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "formData",
              "description": "The date the comment was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "parent",
              "in": "formData",
              "description": "The ID for the parent of the comment.",
              "required": false,
              "type": "string"
            },
            {
              "name": "post",
              "in": "formData",
              "description": "The ID of the associated post object.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "State of the comment.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/comments/{id}": {
        "get": {
          "tags": [
            "comments"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the comment.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "password",
              "in": "query",
              "description": "The password for the parent post of the comment (if the post is password protected).",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "comments"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the comment.",
              "required": true,
              "type": "string"
            },
            {
              "name": "author",
              "in": "formData",
              "description": "The ID of the user object, if author was a user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author_email",
              "in": "formData",
              "description": "Email address for the comment author.",
              "required": false,
              "type": "string",
              "format": "email"
            },
            {
              "name": "author_ip",
              "in": "formData",
              "description": "IP address for the comment author.",
              "required": false,
              "type": "string",
              "format": "ip"
            },
            {
              "name": "author_name",
              "in": "formData",
              "description": "Display name for the comment author.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author_url",
              "in": "formData",
              "description": "URL for the comment author.",
              "required": false,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "author_user_agent",
              "in": "formData",
              "description": "User agent for the comment author.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "formData",
              "description": "The content for the comment.",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "in": "formData",
              "description": "The date the comment was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "formData",
              "description": "The date the comment was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "parent",
              "in": "formData",
              "description": "The ID for the parent of the comment.",
              "required": false,
              "type": "string"
            },
            {
              "name": "post",
              "in": "formData",
              "description": "The ID of the associated post object.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "State of the comment.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "formData",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "comments"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the comment.",
              "required": true,
              "type": "string"
            },
            {
              "name": "author",
              "in": "query",
              "description": "The ID of the user object, if author was a user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author_email",
              "in": "query",
              "description": "Email address for the comment author.",
              "required": false,
              "type": "string",
              "format": "email"
            },
            {
              "name": "author_ip",
              "in": "query",
              "description": "IP address for the comment author.",
              "required": false,
              "type": "string",
              "format": "ip"
            },
            {
              "name": "author_name",
              "in": "query",
              "description": "Display name for the comment author.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author_url",
              "in": "query",
              "description": "URL for the comment author.",
              "required": false,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "author_user_agent",
              "in": "query",
              "description": "User agent for the comment author.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "query",
              "description": "The content for the comment.",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "description": "The date the comment was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "query",
              "description": "The date the comment was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "parent",
              "in": "query",
              "description": "The ID for the parent of the comment.",
              "required": false,
              "type": "string"
            },
            {
              "name": "post",
              "in": "query",
              "description": "The ID of the associated post object.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "State of the comment.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "comments"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the comment.",
              "required": true,
              "type": "string"
            },
            {
              "name": "author",
              "in": "query",
              "description": "The ID of the user object, if author was a user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author_email",
              "in": "query",
              "description": "Email address for the comment author.",
              "required": false,
              "type": "string",
              "format": "email"
            },
            {
              "name": "author_ip",
              "in": "query",
              "description": "IP address for the comment author.",
              "required": false,
              "type": "string",
              "format": "ip"
            },
            {
              "name": "author_name",
              "in": "query",
              "description": "Display name for the comment author.",
              "required": false,
              "type": "string"
            },
            {
              "name": "author_url",
              "in": "query",
              "description": "URL for the comment author.",
              "required": false,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "author_user_agent",
              "in": "query",
              "description": "User agent for the comment author.",
              "required": false,
              "type": "string"
            },
            {
              "name": "content",
              "in": "query",
              "description": "The content for the comment.",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "description": "The date the comment was published, in the site's timezone.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "date_gmt",
              "in": "query",
              "description": "The date the comment was published, as GMT.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "parent",
              "in": "query",
              "description": "The ID for the parent of the comment.",
              "required": false,
              "type": "string"
            },
            {
              "name": "post",
              "in": "query",
              "description": "The ID of the associated post object.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "State of the comment.",
              "required": false,
              "type": "string"
            },
            {
              "name": "meta",
              "in": "query",
              "description": "Meta fields.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "comments"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the comment.",
              "required": true,
              "type": "string"
            },
            {
              "name": "force",
              "in": "query",
              "description": "Whether to bypass Trash and force deletion.",
              "required": false,
              "type": "string"
            },
            {
              "name": "password",
              "in": "query",
              "description": "The password for the parent post of the comment (if the post is password protected).",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/search": {
        "get": {
          "tags": [
            "search"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of the collection.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "per_page",
              "in": "query",
              "description": "Maximum number of items to be returned in result set.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 1
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "type",
              "in": "query",
              "description": "Limit results to items of an object type.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "post",
                  "term",
                  "post-format"
                ],
                "default": "post"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "subtype",
              "in": "query",
              "description": "Limit results to items of one or more object subtypes.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/block-renderer/{name}": {
        "get": {
          "tags": [
            "block-renderer"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "name",
              "in": "path",
              "description": "Unique registered name for the block.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "attributes",
              "in": "query",
              "description": "Attributes for the block.",
              "required": false,
              "type": "string"
            },
            {
              "name": "post_id",
              "in": "query",
              "description": "ID of the post context.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "block-renderer"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "name",
              "in": "path",
              "description": "Unique registered name for the block.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "formData",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "attributes",
              "in": "formData",
              "description": "Attributes for the block.",
              "required": false,
              "type": "string"
            },
            {
              "name": "post_id",
              "in": "formData",
              "description": "ID of the post context.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/block-types": {
        "get": {
          "tags": [
            "block-types"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "namespace",
              "in": "query",
              "description": "Block namespace.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/block-types/{namespace}": {
        "get": {
          "tags": [
            "block-types"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "description": "Block name.",
              "required": false,
              "type": "string"
            },
            {
              "name": "namespace",
              "in": "path",
              "description": "Block namespace.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/settings": {
        "get": {
          "tags": [
            "settings"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "settings"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "title",
              "in": "formData",
              "description": "Site title.",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "in": "formData",
              "description": "Site tagline.",
              "required": false,
              "type": "string"
            },
            {
              "name": "url",
              "in": "formData",
              "description": "Site URL.",
              "required": false,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "email",
              "in": "formData",
              "description": "This address is used for admin purposes, like new user notification.",
              "required": false,
              "type": "string",
              "format": "email"
            },
            {
              "name": "timezone",
              "in": "formData",
              "description": "A city in the same timezone as you.",
              "required": false,
              "type": "string"
            },
            {
              "name": "date_format",
              "in": "formData",
              "description": "A date format for all date strings.",
              "required": false,
              "type": "string"
            },
            {
              "name": "time_format",
              "in": "formData",
              "description": "A time format for all time strings.",
              "required": false,
              "type": "string"
            },
            {
              "name": "start_of_week",
              "in": "formData",
              "description": "A day number of the week that the week should start on.",
              "required": false,
              "type": "string"
            },
            {
              "name": "language",
              "in": "formData",
              "description": "WordPress locale code.",
              "required": false,
              "type": "string"
            },
            {
              "name": "use_smilies",
              "in": "formData",
              "description": "Convert emoticons like :-) and :-P to graphics on display.",
              "required": false,
              "type": "string"
            },
            {
              "name": "default_category",
              "in": "formData",
              "description": "Default post category.",
              "required": false,
              "type": "string"
            },
            {
              "name": "default_post_format",
              "in": "formData",
              "description": "Default post format.",
              "required": false,
              "type": "string"
            },
            {
              "name": "posts_per_page",
              "in": "formData",
              "description": "Blog pages show at most.",
              "required": false,
              "type": "string"
            },
            {
              "name": "default_ping_status",
              "in": "formData",
              "description": "Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "default_comment_status",
              "in": "formData",
              "description": "Allow people to submit comments on new posts.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "site_logo",
              "in": "formData",
              "description": "Site logo.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "settings"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "title",
              "in": "query",
              "description": "Site title.",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "in": "query",
              "description": "Site tagline.",
              "required": false,
              "type": "string"
            },
            {
              "name": "url",
              "in": "query",
              "description": "Site URL.",
              "required": false,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "email",
              "in": "query",
              "description": "This address is used for admin purposes, like new user notification.",
              "required": false,
              "type": "string",
              "format": "email"
            },
            {
              "name": "timezone",
              "in": "query",
              "description": "A city in the same timezone as you.",
              "required": false,
              "type": "string"
            },
            {
              "name": "date_format",
              "in": "query",
              "description": "A date format for all date strings.",
              "required": false,
              "type": "string"
            },
            {
              "name": "time_format",
              "in": "query",
              "description": "A time format for all time strings.",
              "required": false,
              "type": "string"
            },
            {
              "name": "start_of_week",
              "in": "query",
              "description": "A day number of the week that the week should start on.",
              "required": false,
              "type": "string"
            },
            {
              "name": "language",
              "in": "query",
              "description": "WordPress locale code.",
              "required": false,
              "type": "string"
            },
            {
              "name": "use_smilies",
              "in": "query",
              "description": "Convert emoticons like :-) and :-P to graphics on display.",
              "required": false,
              "type": "string"
            },
            {
              "name": "default_category",
              "in": "query",
              "description": "Default post category.",
              "required": false,
              "type": "string"
            },
            {
              "name": "default_post_format",
              "in": "query",
              "description": "Default post format.",
              "required": false,
              "type": "string"
            },
            {
              "name": "posts_per_page",
              "in": "query",
              "description": "Blog pages show at most.",
              "required": false,
              "type": "string"
            },
            {
              "name": "default_ping_status",
              "in": "query",
              "description": "Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "default_comment_status",
              "in": "query",
              "description": "Allow people to submit comments on new posts.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "site_logo",
              "in": "query",
              "description": "Site logo.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "settings"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "title",
              "in": "query",
              "description": "Site title.",
              "required": false,
              "type": "string"
            },
            {
              "name": "description",
              "in": "query",
              "description": "Site tagline.",
              "required": false,
              "type": "string"
            },
            {
              "name": "url",
              "in": "query",
              "description": "Site URL.",
              "required": false,
              "type": "string",
              "format": "uri"
            },
            {
              "name": "email",
              "in": "query",
              "description": "This address is used for admin purposes, like new user notification.",
              "required": false,
              "type": "string",
              "format": "email"
            },
            {
              "name": "timezone",
              "in": "query",
              "description": "A city in the same timezone as you.",
              "required": false,
              "type": "string"
            },
            {
              "name": "date_format",
              "in": "query",
              "description": "A date format for all date strings.",
              "required": false,
              "type": "string"
            },
            {
              "name": "time_format",
              "in": "query",
              "description": "A time format for all time strings.",
              "required": false,
              "type": "string"
            },
            {
              "name": "start_of_week",
              "in": "query",
              "description": "A day number of the week that the week should start on.",
              "required": false,
              "type": "string"
            },
            {
              "name": "language",
              "in": "query",
              "description": "WordPress locale code.",
              "required": false,
              "type": "string"
            },
            {
              "name": "use_smilies",
              "in": "query",
              "description": "Convert emoticons like :-) and :-P to graphics on display.",
              "required": false,
              "type": "string"
            },
            {
              "name": "default_category",
              "in": "query",
              "description": "Default post category.",
              "required": false,
              "type": "string"
            },
            {
              "name": "default_post_format",
              "in": "query",
              "description": "Default post format.",
              "required": false,
              "type": "string"
            },
            {
              "name": "posts_per_page",
              "in": "query",
              "description": "Blog pages show at most.",
              "required": false,
              "type": "string"
            },
            {
              "name": "default_ping_status",
              "in": "query",
              "description": "Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "default_comment_status",
              "in": "query",
              "description": "Allow people to submit comments on new posts.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "collectionFormat": "multi"
            },
            {
              "name": "site_logo",
              "in": "query",
              "description": "Site logo.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/themes": {
        "get": {
          "tags": [
            "themes"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "description": "Limit result set to themes assigned one or more statuses.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/themes/{stylesheet}": {
        "get": {
          "tags": [
            "themes"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "stylesheet",
              "in": "path",
              "description": "The theme's stylesheet. This uniquely identifies the theme.",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/plugins": {
        "get": {
          "tags": [
            "plugins"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "Limits results to plugins with the given status.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              }
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "plugins"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "slug",
              "in": "formData",
              "description": "WordPress.org plugin directory slug.",
              "required": true,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "The plugin activation status.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inactive",
                  "active"
                ],
                "default": "inactive"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/plugins/{plugin}": {
        "get": {
          "tags": [
            "plugins"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "plugin",
              "in": "path",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "plugins"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "formData",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "plugin",
              "in": "path",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "status",
              "in": "formData",
              "description": "The plugin activation status.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inactive",
                  "active"
                ]
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "plugins"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "plugin",
              "in": "path",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "The plugin activation status.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inactive",
                  "active"
                ]
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "plugins"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "plugin",
              "in": "path",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "The plugin activation status.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inactive",
                  "active"
                ]
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "plugins"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "plugin",
              "in": "path",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/sidebars": {
        "get": {
          "tags": [
            "sidebars"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/sidebars/{id}": {
        "get": {
          "tags": [
            "sidebars"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The id of a registered sidebar",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "sidebars"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "widgets",
              "in": "formData",
              "description": "Nested widgets.",
              "required": false,
              "type": "string",
              "items": {
                "type": [
                  "object",
                  "string"
                ]
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "sidebars"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "widgets",
              "in": "query",
              "description": "Nested widgets.",
              "required": false,
              "type": "string",
              "items": {
                "type": [
                  "object",
                  "string"
                ]
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "sidebars"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "widgets",
              "in": "query",
              "description": "Nested widgets.",
              "required": false,
              "type": "string",
              "items": {
                "type": [
                  "object",
                  "string"
                ]
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/widget-types": {
        "get": {
          "tags": [
            "widget-types"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/widget-types/{id}": {
        "get": {
          "tags": [
            "widget-types"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The widget type id.",
              "required": true,
              "type": "string"
            },
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/widget-types/{id}/encode": {
        "post": {
          "tags": [
            "widget-types"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The widget type id.",
              "required": true,
              "type": "string"
            },
            {
              "name": "instance",
              "in": "formData",
              "description": "Current instance settings of the widget.",
              "required": false,
              "type": "string"
            },
            {
              "name": "form_data",
              "in": "formData",
              "description": "Serialized widget form data to encode into instance settings.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/widgets": {
        "get": {
          "tags": [
            "widgets"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "sidebar",
              "in": "query",
              "description": "The sidebar to return widgets for.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "widgets"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "formData",
              "description": "Unique identifier for the widget.",
              "required": false,
              "type": "string"
            },
            {
              "name": "id_base",
              "in": "formData",
              "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
              "required": false,
              "type": "string"
            },
            {
              "name": "sidebar",
              "in": "formData",
              "description": "The sidebar the widget belongs to.",
              "required": true,
              "type": "string"
            },
            {
              "name": "instance",
              "in": "formData",
              "description": "Instance settings of the widget, if supported.",
              "required": false,
              "type": "string"
            },
            {
              "name": "form_data",
              "in": "formData",
              "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/widgets/{id}": {
        "get": {
          "tags": [
            "widgets"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "post": {
          "tags": [
            "widgets"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the widget.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id_base",
              "in": "formData",
              "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
              "required": false,
              "type": "string"
            },
            {
              "name": "sidebar",
              "in": "formData",
              "description": "The sidebar the widget belongs to.",
              "required": false,
              "type": "string"
            },
            {
              "name": "instance",
              "in": "formData",
              "description": "Instance settings of the widget, if supported.",
              "required": false,
              "type": "string"
            },
            {
              "name": "form_data",
              "in": "formData",
              "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "put": {
          "tags": [
            "widgets"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the widget.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id_base",
              "in": "query",
              "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
              "required": false,
              "type": "string"
            },
            {
              "name": "sidebar",
              "in": "query",
              "description": "The sidebar the widget belongs to.",
              "required": false,
              "type": "string"
            },
            {
              "name": "instance",
              "in": "query",
              "description": "Instance settings of the widget, if supported.",
              "required": false,
              "type": "string"
            },
            {
              "name": "form_data",
              "in": "query",
              "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "patch": {
          "tags": [
            "widgets"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Unique identifier for the widget.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id_base",
              "in": "query",
              "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
              "required": false,
              "type": "string"
            },
            {
              "name": "sidebar",
              "in": "query",
              "description": "The sidebar the widget belongs to.",
              "required": false,
              "type": "string"
            },
            {
              "name": "instance",
              "in": "query",
              "description": "Instance settings of the widget, if supported.",
              "required": false,
              "type": "string"
            },
            {
              "name": "form_data",
              "in": "query",
              "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
              "required": false,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        },
        "delete": {
          "tags": [
            "widgets"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "force",
              "in": "query",
              "description": "Whether to force removal of the widget, or move it to the inactive sidebar.",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/block-directory/search": {
        "get": {
          "tags": [
            "block-directory"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of the collection.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "per_page",
              "in": "query",
              "description": "Maximum number of items to be returned in result set.",
              "required": false,
              "type": "string",
              "maximum": 100,
              "minimum": 1
            },
            {
              "name": "term",
              "in": "query",
              "description": "Limit result set to blocks matching the search term.",
              "required": true,
              "type": "string"
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      },
      "/wp/v2/pattern-directory/patterns": {
        "get": {
          "tags": [
            "pattern-directory"
          ],
          "summary": "",
          "description": "",
          "consumes": [
            "application/x-www-form-urlencoded",
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "context",
              "in": "query",
              "description": "Scope under which the request is made; determines fields present in response.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "view",
                  "embed"
                ],
                "default": "view"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "search",
              "in": "query",
              "description": "Limit results to those matching a string.",
              "required": false,
              "type": "string"
            },
            {
              "name": "category",
              "in": "query",
              "description": "Limit results to those matching a category ID.",
              "required": false,
              "type": "string",
              "minimum": 1
            },
            {
              "name": "keyword",
              "in": "query",
              "description": "Limit results to those matching a keyword ID.",
              "required": false,
              "type": "string",
              "minimum": 1
            }
          ],
          "security": [
            {
              "basic": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            }
          }
        }
      }
    },
    "securityDefinitions": {
      "basic": {
        "type": "basic"
      }
    }
  }
